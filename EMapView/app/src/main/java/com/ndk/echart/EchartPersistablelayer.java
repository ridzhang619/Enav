// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: echart.persistablelayer.proto

package com.ndk.echart;

public final class EchartPersistablelayer {
  private EchartPersistablelayer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface EChart_SubLayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_SubLayerInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的名称
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *自定义图层的名称
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_SubLayerInfo}
   */
  public  static final class EChart_SubLayerInfo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_SubLayerInfo, EChart_SubLayerInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_SubLayerInfo)
      EChart_SubLayerInfoOrBuilder {
    private EChart_SubLayerInfo() {
      name_ = "";
    }
    public static final int LAYER_ID_FIELD_NUMBER = 1;
    private int layerId_;
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 1;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.String name_;
    /**
     * <pre>
     *自定义图层的名称
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     *自定义图层的名称
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     *自定义图层的名称
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
    }
    /**
     * <pre>
     *自定义图层的名称
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     *自定义图层的名称
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (layerId_ != 0) {
        output.writeUInt32(1, layerId_);
      }
      if (!name_.isEmpty()) {
        output.writeString(2, getName());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, layerId_);
      }
      if (!name_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_SubLayerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_SubLayerInfo)
        com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfoOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 1;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 1;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 1;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的名称
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       *自定义图层的名称
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       *自定义图层的名称
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的名称
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       *自定义图层的名称
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_SubLayerInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo other = (com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo) arg1;
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          name_ = visitor.visitString(!name_.isEmpty(), name_,
              !other.name_.isEmpty(), other.name_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_SubLayerInfo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_SubLayerInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_SubLayerInfo> PARSER;

    public static com.google.protobuf.Parser<EChart_SubLayerInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerCreateSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerCreateSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerCreateSubLayer}
   */
  public  static final class EChart_InvokePLayerCreateSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerCreateSubLayer, EChart_InvokePLayerCreateSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerCreateSubLayer)
      EChart_InvokePLayerCreateSubLayerOrBuilder {
    private EChart_InvokePLayerCreateSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerCreateSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerCreateSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_CREATE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerCreateSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerCreateSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerCreateSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerCreateSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerCreateSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerCreateSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerCreateSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerCreateSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_CREATE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_CREATE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 2;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerCreateSubLayer}
   */
  public  static final class EChart_ResultPLayerCreateSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerCreateSubLayer, EChart_ResultPLayerCreateSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerCreateSubLayer)
      EChart_ResultPLayerCreateSubLayerOrBuilder {
    private EChart_ResultPLayerCreateSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_CREATE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_CREATE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_CREATE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_CREATE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_CREATE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_CREATE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 2;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 2;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 2;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 2;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(2, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerCreateSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerCreateSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_CREATE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_CREATE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_CREATE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_CREATE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_CREATE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_CREATE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 2;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 2;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 2;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerCreateSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerCreateSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerCreateSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerCreateSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerCreateSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerCreateSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerDestroySubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerDestroySubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerDestroySubLayer}
   */
  public  static final class EChart_InvokePLayerDestroySubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerDestroySubLayer, EChart_InvokePLayerDestroySubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerDestroySubLayer)
      EChart_InvokePLayerDestroySubLayerOrBuilder {
    private EChart_InvokePLayerDestroySubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerDestroySubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerDestroySubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DESTROY_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerDestroySubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerDestroySubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerDestroySubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDestroySubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerDestroySubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerDestroySubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerDestroySubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerDestroySubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerDestroySubLayer}
   */
  public  static final class EChart_ResultPLayerDestroySubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerDestroySubLayer, EChart_ResultPLayerDestroySubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerDestroySubLayer)
      EChart_ResultPLayerDestroySubLayerOrBuilder {
    private EChart_ResultPLayerDestroySubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerDestroySubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerDestroySubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DESTROY_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerDestroySubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerDestroySubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerDestroySubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDestroySubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerDestroySubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerDestroySubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerGetSubLayersInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerGetSubLayersInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerGetSubLayersInfo}
   */
  public  static final class EChart_InvokePLayerGetSubLayersInfo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerGetSubLayersInfo, EChart_InvokePLayerGetSubLayersInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerGetSubLayersInfo)
      EChart_InvokePLayerGetSubLayersInfoOrBuilder {
    private EChart_InvokePLayerGetSubLayersInfo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerGetSubLayersInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerGetSubLayersInfo)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfoOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerGetSubLayersInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerGetSubLayersInfo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerGetSubLayersInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerGetSubLayersInfo> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerGetSubLayersInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerGetSubLayersInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerGetSubLayersInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    java.util.List<com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo> 
        getSublayersInfoList();
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo getSublayersInfo(int index);
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    int getSublayersInfoCount();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerGetSubLayersInfo}
   */
  public  static final class EChart_ResultPLayerGetSubLayersInfo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerGetSubLayersInfo, EChart_ResultPLayerGetSubLayersInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerGetSubLayersInfo)
      EChart_ResultPLayerGetSubLayersInfoOrBuilder {
    private EChart_ResultPLayerGetSubLayersInfo() {
      sublayersInfo_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int SUBLAYERS_INFO_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo> sublayersInfo_;
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    public java.util.List<com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo> getSublayersInfoList() {
      return sublayersInfo_;
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    public java.util.List<? extends com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfoOrBuilder> 
        getSublayersInfoOrBuilderList() {
      return sublayersInfo_;
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    public int getSublayersInfoCount() {
      return sublayersInfo_.size();
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    public com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo getSublayersInfo(int index) {
      return sublayersInfo_.get(index);
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    public com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfoOrBuilder getSublayersInfoOrBuilder(
        int index) {
      return sublayersInfo_.get(index);
    }
    private void ensureSublayersInfoIsMutable() {
      if (!sublayersInfo_.isModifiable()) {
        sublayersInfo_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(sublayersInfo_);
       }
    }

    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void setSublayersInfo(
        int index, com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSublayersInfoIsMutable();
      sublayersInfo_.set(index, value);
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void setSublayersInfo(
        int index, com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.Builder builderForValue) {
      ensureSublayersInfoIsMutable();
      sublayersInfo_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void addSublayersInfo(com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSublayersInfoIsMutable();
      sublayersInfo_.add(value);
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void addSublayersInfo(
        int index, com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSublayersInfoIsMutable();
      sublayersInfo_.add(index, value);
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void addSublayersInfo(
        com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.Builder builderForValue) {
      ensureSublayersInfoIsMutable();
      sublayersInfo_.add(builderForValue.build());
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void addSublayersInfo(
        int index, com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.Builder builderForValue) {
      ensureSublayersInfoIsMutable();
      sublayersInfo_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void addAllSublayersInfo(
        java.lang.Iterable<? extends com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo> values) {
      ensureSublayersInfoIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sublayersInfo_);
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void clearSublayersInfo() {
      sublayersInfo_ = emptyProtobufList();
    }
    /**
     * <pre>
     *所有已保存的自定义图层的信息
     * </pre>
     *
     * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
     */
    private void removeSublayersInfo(int index) {
      ensureSublayersInfoIsMutable();
      sublayersInfo_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      for (int i = 0; i < sublayersInfo_.size(); i++) {
        output.writeMessage(2, sublayersInfo_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      for (int i = 0; i < sublayersInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sublayersInfo_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerGetSubLayersInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerGetSubLayersInfo)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfoOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_INFO	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public java.util.List<com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo> getSublayersInfoList() {
        return java.util.Collections.unmodifiableList(
            instance.getSublayersInfoList());
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public int getSublayersInfoCount() {
        return instance.getSublayersInfoCount();
      }/**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo getSublayersInfo(int index) {
        return instance.getSublayersInfo(index);
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder setSublayersInfo(
          int index, com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo value) {
        copyOnWrite();
        instance.setSublayersInfo(index, value);
        return this;
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder setSublayersInfo(
          int index, com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setSublayersInfo(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder addSublayersInfo(com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo value) {
        copyOnWrite();
        instance.addSublayersInfo(value);
        return this;
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder addSublayersInfo(
          int index, com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo value) {
        copyOnWrite();
        instance.addSublayersInfo(index, value);
        return this;
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder addSublayersInfo(
          com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addSublayersInfo(builderForValue);
        return this;
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder addSublayersInfo(
          int index, com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.Builder builderForValue) {
        copyOnWrite();
        instance.addSublayersInfo(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder addAllSublayersInfo(
          java.lang.Iterable<? extends com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo> values) {
        copyOnWrite();
        instance.addAllSublayersInfo(values);
        return this;
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder clearSublayersInfo() {
        copyOnWrite();
        instance.clearSublayersInfo();
        return this;
      }
      /**
       * <pre>
       *所有已保存的自定义图层的信息
       * </pre>
       *
       * <code>repeated .echart.persistablelayer.EChart_SubLayerInfo sublayers_info = 2;</code>
       */
      public Builder removeSublayersInfo(int index) {
        copyOnWrite();
        instance.removeSublayersInfo(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerGetSubLayersInfo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          sublayersInfo_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          sublayersInfo_= visitor.visitList(sublayersInfo_, other.sublayersInfo_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  if (!sublayersInfo_.isModifiable()) {
                    sublayersInfo_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(sublayersInfo_);
                  }
                  sublayersInfo_.add(
                      input.readMessage(com.ndk.echart.EchartPersistablelayer.EChart_SubLayerInfo.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerGetSubLayersInfo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerGetSubLayersInfo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerGetSubLayersInfo> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerGetSubLayersInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerRemoveSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerRemoveSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *需删除的自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerRemoveSubLayer}
   */
  public  static final class EChart_InvokePLayerRemoveSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerRemoveSubLayer, EChart_InvokePLayerRemoveSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerRemoveSubLayer)
      EChart_InvokePLayerRemoveSubLayerOrBuilder {
    private EChart_InvokePLayerRemoveSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *需删除的自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *需删除的自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *需删除的自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerRemoveSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerRemoveSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_REMOVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *需删除的自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *需删除的自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *需删除的自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerRemoveSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerRemoveSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerRemoveSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerRemoveSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerRemoveSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerRemoveSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerRemoveSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerRemoveSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *是否成功
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     */
    boolean getSuccess();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerRemoveSubLayer}
   */
  public  static final class EChart_ResultPLayerRemoveSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerRemoveSubLayer, EChart_ResultPLayerRemoveSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerRemoveSubLayer)
      EChart_ResultPLayerRemoveSubLayerOrBuilder {
    private EChart_ResultPLayerRemoveSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int SUCCESS_FIELD_NUMBER = 2;
    private boolean success_;
    /**
     * <pre>
     *是否成功
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     */
    public boolean getSuccess() {
      return success_;
    }
    /**
     * <pre>
     *是否成功
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     */
    private void setSuccess(boolean value) {
      
      success_ = value;
    }
    /**
     * <pre>
     *是否成功
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     */
    private void clearSuccess() {
      
      success_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (success_ != false) {
        output.writeBool(2, success_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (success_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, success_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerRemoveSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerRemoveSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_REMOVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *是否成功
       * </pre>
       *
       * <code>optional bool success = 2;</code>
       */
      public boolean getSuccess() {
        return instance.getSuccess();
      }
      /**
       * <pre>
       *是否成功
       * </pre>
       *
       * <code>optional bool success = 2;</code>
       */
      public Builder setSuccess(boolean value) {
        copyOnWrite();
        instance.setSuccess(value);
        return this;
      }
      /**
       * <pre>
       *是否成功
       * </pre>
       *
       * <code>optional bool success = 2;</code>
       */
      public Builder clearSuccess() {
        copyOnWrite();
        instance.clearSuccess();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerRemoveSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          success_ = visitor.visitBoolean(success_ != false, success_,
              other.success_ != false, other.success_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  success_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerRemoveSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerRemoveSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerRemoveSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerRemoveSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerRemoveSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerSaveSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerSaveSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *需保存的自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerSaveSubLayer}
   */
  public  static final class EChart_InvokePLayerSaveSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerSaveSubLayer, EChart_InvokePLayerSaveSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerSaveSubLayer)
      EChart_InvokePLayerSaveSubLayerOrBuilder {
    private EChart_InvokePLayerSaveSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *需保存的自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *需保存的自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *需保存的自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerSaveSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerSaveSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SAVE_SUBLAYER
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *需保存的自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *需保存的自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *需保存的自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerSaveSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerSaveSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerSaveSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSaveSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerSaveSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerSaveSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerSaveSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerSaveSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *是否成功
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     */
    boolean getSuccess();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerSaveSubLayer}
   */
  public  static final class EChart_ResultPLayerSaveSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerSaveSubLayer, EChart_ResultPLayerSaveSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerSaveSubLayer)
      EChart_ResultPLayerSaveSubLayerOrBuilder {
    private EChart_ResultPLayerSaveSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int SUCCESS_FIELD_NUMBER = 2;
    private boolean success_;
    /**
     * <pre>
     *是否成功
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     */
    public boolean getSuccess() {
      return success_;
    }
    /**
     * <pre>
     *是否成功
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     */
    private void setSuccess(boolean value) {
      
      success_ = value;
    }
    /**
     * <pre>
     *是否成功
     * </pre>
     *
     * <code>optional bool success = 2;</code>
     */
    private void clearSuccess() {
      
      success_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (success_ != false) {
        output.writeBool(2, success_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (success_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, success_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerSaveSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerSaveSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SAVE_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *是否成功
       * </pre>
       *
       * <code>optional bool success = 2;</code>
       */
      public boolean getSuccess() {
        return instance.getSuccess();
      }
      /**
       * <pre>
       *是否成功
       * </pre>
       *
       * <code>optional bool success = 2;</code>
       */
      public Builder setSuccess(boolean value) {
        copyOnWrite();
        instance.setSuccess(value);
        return this;
      }
      /**
       * <pre>
       *是否成功
       * </pre>
       *
       * <code>optional bool success = 2;</code>
       */
      public Builder clearSuccess() {
        copyOnWrite();
        instance.clearSuccess();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerSaveSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          success_ = visitor.visitBoolean(success_ != false, success_,
              other.success_ != false, other.success_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  success_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerSaveSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerSaveSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSaveSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerSaveSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerSaveSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerGetSubLayersCountOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerGetSubLayersCount)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerGetSubLayersCount}
   */
  public  static final class EChart_InvokePLayerGetSubLayersCount extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerGetSubLayersCount, EChart_InvokePLayerGetSubLayersCount.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerGetSubLayersCount)
      EChart_InvokePLayerGetSubLayersCountOrBuilder {
    private EChart_InvokePLayerGetSubLayersCount() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerGetSubLayersCount}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerGetSubLayersCount)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCountOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerGetSubLayersCount)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerGetSubLayersCount)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerGetSubLayersCount();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersCount getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerGetSubLayersCount> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerGetSubLayersCount> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerGetSubLayersCountOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerGetSubLayersCount)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *内存中自定义图层的数量
     * </pre>
     *
     * <code>optional uint32 count = 2;</code>
     */
    int getCount();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerGetSubLayersCount}
   */
  public  static final class EChart_ResultPLayerGetSubLayersCount extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerGetSubLayersCount, EChart_ResultPLayerGetSubLayersCount.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerGetSubLayersCount)
      EChart_ResultPLayerGetSubLayersCountOrBuilder {
    private EChart_ResultPLayerGetSubLayersCount() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private int count_;
    /**
     * <pre>
     *内存中自定义图层的数量
     * </pre>
     *
     * <code>optional uint32 count = 2;</code>
     */
    public int getCount() {
      return count_;
    }
    /**
     * <pre>
     *内存中自定义图层的数量
     * </pre>
     *
     * <code>optional uint32 count = 2;</code>
     */
    private void setCount(int value) {
      
      count_ = value;
    }
    /**
     * <pre>
     *内存中自定义图层的数量
     * </pre>
     *
     * <code>optional uint32 count = 2;</code>
     */
    private void clearCount() {
      
      count_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (count_ != 0) {
        output.writeUInt32(2, count_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, count_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerGetSubLayersCount}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerGetSubLayersCount)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCountOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLSYERS_COUNT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *内存中自定义图层的数量
       * </pre>
       *
       * <code>optional uint32 count = 2;</code>
       */
      public int getCount() {
        return instance.getCount();
      }
      /**
       * <pre>
       *内存中自定义图层的数量
       * </pre>
       *
       * <code>optional uint32 count = 2;</code>
       */
      public Builder setCount(int value) {
        copyOnWrite();
        instance.setCount(value);
        return this;
      }
      /**
       * <pre>
       *内存中自定义图层的数量
       * </pre>
       *
       * <code>optional uint32 count = 2;</code>
       */
      public Builder clearCount() {
        copyOnWrite();
        instance.clearCount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerGetSubLayersCount)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          count_ = visitor.visitInt(count_ != 0, count_,
              other.count_ != 0, other.count_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  count_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerGetSubLayersCount)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerGetSubLayersCount();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersCount getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerGetSubLayersCount> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerGetSubLayersCount> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerSetSubLayerOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerSetSubLayerOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *渲染序号
     * </pre>
     *
     * <code>optional uint32 order = 4;</code>
     */
    int getOrder();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerSetSubLayerOrder}
   */
  public  static final class EChart_InvokePLayerSetSubLayerOrder extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerSetSubLayerOrder, EChart_InvokePLayerSetSubLayerOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerSetSubLayerOrder)
      EChart_InvokePLayerSetSubLayerOrderOrBuilder {
    private EChart_InvokePLayerSetSubLayerOrder() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int ORDER_FIELD_NUMBER = 4;
    private int order_;
    /**
     * <pre>
     *渲染序号
     * </pre>
     *
     * <code>optional uint32 order = 4;</code>
     */
    public int getOrder() {
      return order_;
    }
    /**
     * <pre>
     *渲染序号
     * </pre>
     *
     * <code>optional uint32 order = 4;</code>
     */
    private void setOrder(int value) {
      
      order_ = value;
    }
    /**
     * <pre>
     *渲染序号
     * </pre>
     *
     * <code>optional uint32 order = 4;</code>
     */
    private void clearOrder() {
      
      order_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (order_ != 0) {
        output.writeUInt32(4, order_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (order_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, order_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerSetSubLayerOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerSetSubLayerOrder)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrderOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *渲染序号
       * </pre>
       *
       * <code>optional uint32 order = 4;</code>
       */
      public int getOrder() {
        return instance.getOrder();
      }
      /**
       * <pre>
       *渲染序号
       * </pre>
       *
       * <code>optional uint32 order = 4;</code>
       */
      public Builder setOrder(int value) {
        copyOnWrite();
        instance.setOrder(value);
        return this;
      }
      /**
       * <pre>
       *渲染序号
       * </pre>
       *
       * <code>optional uint32 order = 4;</code>
       */
      public Builder clearOrder() {
        copyOnWrite();
        instance.clearOrder();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerSetSubLayerOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          order_ = visitor.visitInt(order_ != 0, order_,
              other.order_ != 0, other.order_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 32: {

                  order_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerSetSubLayerOrder)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerSetSubLayerOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetSubLayerOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerSetSubLayerOrder> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerSetSubLayerOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerSetSubLayerOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerSetSubLayerOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerSetSubLayerOrder}
   */
  public  static final class EChart_ResultPLayerSetSubLayerOrder extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerSetSubLayerOrder, EChart_ResultPLayerSetSubLayerOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerSetSubLayerOrder)
      EChart_ResultPLayerSetSubLayerOrderOrBuilder {
    private EChart_ResultPLayerSetSubLayerOrder() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerSetSubLayerOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerSetSubLayerOrder)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrderOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_SUBLAYER_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerSetSubLayerOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerSetSubLayerOrder)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerSetSubLayerOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetSubLayerOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerSetSubLayerOrder> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerSetSubLayerOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerGetSubLayersOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerGetSubLayersOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerGetSubLayersOrder}
   */
  public  static final class EChart_InvokePLayerGetSubLayersOrder extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerGetSubLayersOrder, EChart_InvokePLayerGetSubLayersOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerGetSubLayersOrder)
      EChart_InvokePLayerGetSubLayersOrderOrBuilder {
    private EChart_InvokePLayerGetSubLayersOrder() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerGetSubLayersOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerGetSubLayersOrder)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrderOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerGetSubLayersOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerGetSubLayersOrder)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerGetSubLayersOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetSubLayersOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerGetSubLayersOrder> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerGetSubLayersOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerGetSubLayersOrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerGetSubLayersOrder)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    java.util.List<java.lang.Integer> getSublayersIdList();
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    int getSublayersIdCount();
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    int getSublayersId(int index);
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerGetSubLayersOrder}
   */
  public  static final class EChart_ResultPLayerGetSubLayersOrder extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerGetSubLayersOrder, EChart_ResultPLayerGetSubLayersOrder.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerGetSubLayersOrder)
      EChart_ResultPLayerGetSubLayersOrderOrBuilder {
    private EChart_ResultPLayerGetSubLayersOrder() {
      sublayersId_ = emptyIntList();
    }
    private int bitField0_;
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int SUBLAYERS_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList sublayersId_;
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getSublayersIdList() {
      return sublayersId_;
    }
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    public int getSublayersIdCount() {
      return sublayersId_.size();
    }
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    public int getSublayersId(int index) {
      return sublayersId_.getInt(index);
    }
    private void ensureSublayersIdIsMutable() {
      if (!sublayersId_.isModifiable()) {
        sublayersId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(sublayersId_);
       }
    }
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    private void setSublayersId(
        int index, int value) {
      ensureSublayersIdIsMutable();
      sublayersId_.setInt(index, value);
    }
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    private void addSublayersId(int value) {
      ensureSublayersIdIsMutable();
      sublayersId_.addInt(value);
    }
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    private void addAllSublayersId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSublayersIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sublayersId_);
    }
    /**
     * <pre>
     *根据从低到高渲染序号排序的自定义图层的id
     * </pre>
     *
     * <code>repeated uint32 sublayers_id = 2;</code>
     */
    private void clearSublayersId() {
      sublayersId_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      for (int i = 0; i < sublayersId_.size(); i++) {
        output.writeUInt32(2, sublayersId_.getInt(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sublayersId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(sublayersId_.getInt(i));
        }
        size += dataSize;
        size += 1 * getSublayersIdList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerGetSubLayersOrder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerGetSubLayersOrder)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrderOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_SUBLAYERS_ORDER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *根据从低到高渲染序号排序的自定义图层的id
       * </pre>
       *
       * <code>repeated uint32 sublayers_id = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getSublayersIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getSublayersIdList());
      }
      /**
       * <pre>
       *根据从低到高渲染序号排序的自定义图层的id
       * </pre>
       *
       * <code>repeated uint32 sublayers_id = 2;</code>
       */
      public int getSublayersIdCount() {
        return instance.getSublayersIdCount();
      }
      /**
       * <pre>
       *根据从低到高渲染序号排序的自定义图层的id
       * </pre>
       *
       * <code>repeated uint32 sublayers_id = 2;</code>
       */
      public int getSublayersId(int index) {
        return instance.getSublayersId(index);
      }
      /**
       * <pre>
       *根据从低到高渲染序号排序的自定义图层的id
       * </pre>
       *
       * <code>repeated uint32 sublayers_id = 2;</code>
       */
      public Builder setSublayersId(
          int index, int value) {
        copyOnWrite();
        instance.setSublayersId(index, value);
        return this;
      }
      /**
       * <pre>
       *根据从低到高渲染序号排序的自定义图层的id
       * </pre>
       *
       * <code>repeated uint32 sublayers_id = 2;</code>
       */
      public Builder addSublayersId(int value) {
        copyOnWrite();
        instance.addSublayersId(value);
        return this;
      }
      /**
       * <pre>
       *根据从低到高渲染序号排序的自定义图层的id
       * </pre>
       *
       * <code>repeated uint32 sublayers_id = 2;</code>
       */
      public Builder addAllSublayersId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllSublayersId(values);
        return this;
      }
      /**
       * <pre>
       *根据从低到高渲染序号排序的自定义图层的id
       * </pre>
       *
       * <code>repeated uint32 sublayers_id = 2;</code>
       */
      public Builder clearSublayersId() {
        copyOnWrite();
        instance.clearSublayersId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerGetSubLayersOrder)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          sublayersId_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          sublayersId_= visitor.visitIntList(sublayersId_, other.sublayersId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {
                  if (!sublayersId_.isModifiable()) {
                    sublayersId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(sublayersId_);
                  }
                  sublayersId_.addInt(input.readUInt32());
                  break;
                }
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!sublayersId_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    sublayersId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(sublayersId_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    sublayersId_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerGetSubLayersOrder)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerGetSubLayersOrder();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetSubLayersOrder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerGetSubLayersOrder> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerGetSubLayersOrder> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerSetTopSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerSetTopSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerSetTopSubLayer}
   */
  public  static final class EChart_InvokePLayerSetTopSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerSetTopSubLayer, EChart_InvokePLayerSetTopSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerSetTopSubLayer)
      EChart_InvokePLayerSetTopSubLayerOrBuilder {
    private EChart_InvokePLayerSetTopSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerSetTopSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerSetTopSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerSetTopSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerSetTopSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerSetTopSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetTopSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerSetTopSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerSetTopSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerSetTopSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerSetTopSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerSetTopSubLayer}
   */
  public  static final class EChart_ResultPLayerSetTopSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerSetTopSubLayer, EChart_ResultPLayerSetTopSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerSetTopSubLayer)
      EChart_ResultPLayerSetTopSubLayerOrBuilder {
    private EChart_ResultPLayerSetTopSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerSetTopSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerSetTopSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerSetTopSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerSetTopSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerSetTopSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetTopSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerSetTopSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerSetTopSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerGetTopSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerGetTopSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerGetTopSubLayer}
   */
  public  static final class EChart_InvokePLayerGetTopSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerGetTopSubLayer, EChart_InvokePLayerGetTopSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerGetTopSubLayer)
      EChart_InvokePLayerGetTopSubLayerOrBuilder {
    private EChart_InvokePLayerGetTopSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerGetTopSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerGetTopSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerGetTopSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerGetTopSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerGetTopSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerGetTopSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerGetTopSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerGetTopSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerGetTopSubLayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerGetTopSubLayer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *自定义图层的id		
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 2;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerGetTopSubLayer}
   */
  public  static final class EChart_ResultPLayerGetTopSubLayer extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerGetTopSubLayer, EChart_ResultPLayerGetTopSubLayer.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerGetTopSubLayer)
      EChart_ResultPLayerGetTopSubLayerOrBuilder {
    private EChart_ResultPLayerGetTopSubLayer() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 2;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id		
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 2;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id		
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 2;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id		
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 2;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(2, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerGetTopSubLayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerGetTopSubLayer)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayerOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_GET_TOP_SUBLAYER	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id		
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 2;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id		
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 2;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id		
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 2;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerGetTopSubLayer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerGetTopSubLayer)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerGetTopSubLayer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerGetTopSubLayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerGetTopSubLayer> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerGetTopSubLayer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerBeginDrawOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerBeginDraw)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerBeginDraw}
   */
  public  static final class EChart_InvokePLayerBeginDraw extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerBeginDraw, EChart_InvokePLayerBeginDraw.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerBeginDraw)
      EChart_InvokePLayerBeginDrawOrBuilder {
    private EChart_InvokePLayerBeginDraw() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerBeginDraw}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerBeginDraw)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDrawOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerBeginDraw)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerBeginDraw)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerBeginDraw();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginDraw getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerBeginDraw> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerBeginDraw> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerBeginDrawOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerBeginDraw)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *图元的id
     * </pre>
     *
     * <code>optional uint32 feature_id = 2;</code>
     */
    int getFeatureId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerBeginDraw}
   */
  public  static final class EChart_ResultPLayerBeginDraw extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerBeginDraw, EChart_ResultPLayerBeginDraw.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerBeginDraw)
      EChart_ResultPLayerBeginDrawOrBuilder {
    private EChart_ResultPLayerBeginDraw() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int FEATURE_ID_FIELD_NUMBER = 2;
    private int featureId_;
    /**
     * <pre>
     *图元的id
     * </pre>
     *
     * <code>optional uint32 feature_id = 2;</code>
     */
    public int getFeatureId() {
      return featureId_;
    }
    /**
     * <pre>
     *图元的id
     * </pre>
     *
     * <code>optional uint32 feature_id = 2;</code>
     */
    private void setFeatureId(int value) {
      
      featureId_ = value;
    }
    /**
     * <pre>
     *图元的id
     * </pre>
     *
     * <code>optional uint32 feature_id = 2;</code>
     */
    private void clearFeatureId() {
      
      featureId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (featureId_ != 0) {
        output.writeUInt32(2, featureId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (featureId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, featureId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerBeginDraw}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerBeginDraw)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDrawOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *图元的id
       * </pre>
       *
       * <code>optional uint32 feature_id = 2;</code>
       */
      public int getFeatureId() {
        return instance.getFeatureId();
      }
      /**
       * <pre>
       *图元的id
       * </pre>
       *
       * <code>optional uint32 feature_id = 2;</code>
       */
      public Builder setFeatureId(int value) {
        copyOnWrite();
        instance.setFeatureId(value);
        return this;
      }
      /**
       * <pre>
       *图元的id
       * </pre>
       *
       * <code>optional uint32 feature_id = 2;</code>
       */
      public Builder clearFeatureId() {
        copyOnWrite();
        instance.clearFeatureId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerBeginDraw)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          featureId_ = visitor.visitInt(featureId_ != 0, featureId_,
              other.featureId_ != 0, other.featureId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  featureId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerBeginDraw)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerBeginDraw();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginDraw getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerBeginDraw> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerBeginDraw> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerEndDrawOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerEndDraw)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerEndDraw}
   */
  public  static final class EChart_InvokePLayerEndDraw extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerEndDraw, EChart_InvokePLayerEndDraw.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerEndDraw)
      EChart_InvokePLayerEndDrawOrBuilder {
    private EChart_InvokePLayerEndDraw() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerEndDraw}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerEndDraw)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDrawOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerEndDraw)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerEndDraw)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerEndDraw();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndDraw getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerEndDraw> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerEndDraw> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerEndDrawOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerEndDraw)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerEndDraw}
   */
  public  static final class EChart_ResultPLayerEndDraw extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerEndDraw, EChart_ResultPLayerEndDraw.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerEndDraw)
      EChart_ResultPLayerEndDrawOrBuilder {
    private EChart_ResultPLayerEndDraw() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_DRAW
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerEndDraw}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerEndDraw)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDrawOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_DRAW
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerEndDraw)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerEndDraw)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerEndDraw();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndDraw getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerEndDraw> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerEndDraw> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerSetPenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerSetPen)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *画笔属性
     * </pre>
     *
     * <code>optional .echart.EChart_Pen pen = 4;</code>
     */
    boolean hasPen();
    /**
     * <pre>
     *画笔属性
     * </pre>
     *
     * <code>optional .echart.EChart_Pen pen = 4;</code>
     */
    com.ndk.echart.Echart.EChart_Pen getPen();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerSetPen}
   */
  public  static final class EChart_InvokePLayerSetPen extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerSetPen, EChart_InvokePLayerSetPen.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerSetPen)
      EChart_InvokePLayerSetPenOrBuilder {
    private EChart_InvokePLayerSetPen() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int PEN_FIELD_NUMBER = 4;
    private com.ndk.echart.Echart.EChart_Pen pen_;
    /**
     * <pre>
     *画笔属性
     * </pre>
     *
     * <code>optional .echart.EChart_Pen pen = 4;</code>
     */
    public boolean hasPen() {
      return pen_ != null;
    }
    /**
     * <pre>
     *画笔属性
     * </pre>
     *
     * <code>optional .echart.EChart_Pen pen = 4;</code>
     */
    public com.ndk.echart.Echart.EChart_Pen getPen() {
      return pen_ == null ? com.ndk.echart.Echart.EChart_Pen.getDefaultInstance() : pen_;
    }
    /**
     * <pre>
     *画笔属性
     * </pre>
     *
     * <code>optional .echart.EChart_Pen pen = 4;</code>
     */
    private void setPen(com.ndk.echart.Echart.EChart_Pen value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pen_ = value;
      
      }
    /**
     * <pre>
     *画笔属性
     * </pre>
     *
     * <code>optional .echart.EChart_Pen pen = 4;</code>
     */
    private void setPen(
        com.ndk.echart.Echart.EChart_Pen.Builder builderForValue) {
      pen_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *画笔属性
     * </pre>
     *
     * <code>optional .echart.EChart_Pen pen = 4;</code>
     */
    private void mergePen(com.ndk.echart.Echart.EChart_Pen value) {
      if (pen_ != null &&
          pen_ != com.ndk.echart.Echart.EChart_Pen.getDefaultInstance()) {
        pen_ =
          com.ndk.echart.Echart.EChart_Pen.newBuilder(pen_).mergeFrom(value).buildPartial();
      } else {
        pen_ = value;
      }
      
    }
    /**
     * <pre>
     *画笔属性
     * </pre>
     *
     * <code>optional .echart.EChart_Pen pen = 4;</code>
     */
    private void clearPen() {  pen_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (pen_ != null) {
        output.writeMessage(4, getPen());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (pen_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPen());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerSetPen}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerSetPen)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPenOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *画笔属性
       * </pre>
       *
       * <code>optional .echart.EChart_Pen pen = 4;</code>
       */
      public boolean hasPen() {
        return instance.hasPen();
      }
      /**
       * <pre>
       *画笔属性
       * </pre>
       *
       * <code>optional .echart.EChart_Pen pen = 4;</code>
       */
      public com.ndk.echart.Echart.EChart_Pen getPen() {
        return instance.getPen();
      }
      /**
       * <pre>
       *画笔属性
       * </pre>
       *
       * <code>optional .echart.EChart_Pen pen = 4;</code>
       */
      public Builder setPen(com.ndk.echart.Echart.EChart_Pen value) {
        copyOnWrite();
        instance.setPen(value);
        return this;
        }
      /**
       * <pre>
       *画笔属性
       * </pre>
       *
       * <code>optional .echart.EChart_Pen pen = 4;</code>
       */
      public Builder setPen(
          com.ndk.echart.Echart.EChart_Pen.Builder builderForValue) {
        copyOnWrite();
        instance.setPen(builderForValue);
        return this;
      }
      /**
       * <pre>
       *画笔属性
       * </pre>
       *
       * <code>optional .echart.EChart_Pen pen = 4;</code>
       */
      public Builder mergePen(com.ndk.echart.Echart.EChart_Pen value) {
        copyOnWrite();
        instance.mergePen(value);
        return this;
      }
      /**
       * <pre>
       *画笔属性
       * </pre>
       *
       * <code>optional .echart.EChart_Pen pen = 4;</code>
       */
      public Builder clearPen() {  copyOnWrite();
        instance.clearPen();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerSetPen)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          pen_ = visitor.visitMessage(pen_, other.pen_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  com.ndk.echart.Echart.EChart_Pen.Builder subBuilder = null;
                  if (pen_ != null) {
                    subBuilder = pen_.toBuilder();
                  }
                  pen_ = input.readMessage(com.ndk.echart.Echart.EChart_Pen.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pen_);
                    pen_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerSetPen)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerSetPen();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerSetPen getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerSetPen> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerSetPen> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerSetPenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerSetPen)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerSetPen}
   */
  public  static final class EChart_ResultPLayerSetPen extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerSetPen, EChart_ResultPLayerSetPen.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerSetPen)
      EChart_ResultPLayerSetPenOrBuilder {
    private EChart_ResultPLayerSetPen() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SET_PEN
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerSetPen}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerSetPen)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPenOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SET_PEN
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerSetPen)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerSetPen)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerSetPen();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerSetPen getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerSetPen> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerSetPen> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerMoveToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerMoveTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    boolean hasPt();
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    com.ndk.echart.Echart.EChart_GeoPoint getPt();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerMoveTo}
   */
  public  static final class EChart_InvokePLayerMoveTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerMoveTo, EChart_InvokePLayerMoveTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerMoveTo)
      EChart_InvokePLayerMoveToOrBuilder {
    private EChart_InvokePLayerMoveTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int PT_FIELD_NUMBER = 4;
    private com.ndk.echart.Echart.EChart_GeoPoint pt_;
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public boolean hasPt() {
      return pt_ != null;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
      return pt_ == null ? com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance() : pt_;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pt_ = value;
      
      }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(
        com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
      pt_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (pt_ != null &&
          pt_ != com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance()) {
        pt_ =
          com.ndk.echart.Echart.EChart_GeoPoint.newBuilder(pt_).mergeFrom(value).buildPartial();
      } else {
        pt_ = value;
      }
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void clearPt() {  pt_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (pt_ != null) {
        output.writeMessage(4, getPt());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (pt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPt());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerMoveTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerMoveTo)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public boolean hasPt() {
        return instance.hasPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
        return instance.getPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.setPt(value);
        return this;
        }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(
          com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setPt(builderForValue);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.mergePt(value);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder clearPt() {  copyOnWrite();
        instance.clearPt();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerMoveTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          pt_ = visitor.visitMessage(pt_, other.pt_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  com.ndk.echart.Echart.EChart_GeoPoint.Builder subBuilder = null;
                  if (pt_ != null) {
                    subBuilder = pt_.toBuilder();
                  }
                  pt_ = input.readMessage(com.ndk.echart.Echart.EChart_GeoPoint.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pt_);
                    pt_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerMoveTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerMoveTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerMoveTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerMoveTo> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerMoveTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerMoveToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerMoveTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerMoveTo}
   */
  public  static final class EChart_ResultPLayerMoveTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerMoveTo, EChart_ResultPLayerMoveTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerMoveTo)
      EChart_ResultPLayerMoveToOrBuilder {
    private EChart_ResultPLayerMoveTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerMoveTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerMoveTo)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerMoveTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerMoveTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerMoveTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerMoveTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerMoveTo> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerMoveTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerDrawCircleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerDrawCircle)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *圆的半径(屏幕像素单位)
     * </pre>
     *
     * <code>optional double radius = 4;</code>
     */
    double getRadius();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerDrawCircle}
   */
  public  static final class EChart_InvokePLayerDrawCircle extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerDrawCircle, EChart_InvokePLayerDrawCircle.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerDrawCircle)
      EChart_InvokePLayerDrawCircleOrBuilder {
    private EChart_InvokePLayerDrawCircle() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int RADIUS_FIELD_NUMBER = 4;
    private double radius_;
    /**
     * <pre>
     *圆的半径(屏幕像素单位)
     * </pre>
     *
     * <code>optional double radius = 4;</code>
     */
    public double getRadius() {
      return radius_;
    }
    /**
     * <pre>
     *圆的半径(屏幕像素单位)
     * </pre>
     *
     * <code>optional double radius = 4;</code>
     */
    private void setRadius(double value) {
      
      radius_ = value;
    }
    /**
     * <pre>
     *圆的半径(屏幕像素单位)
     * </pre>
     *
     * <code>optional double radius = 4;</code>
     */
    private void clearRadius() {
      
      radius_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (radius_ != 0D) {
        output.writeDouble(4, radius_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (radius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, radius_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerDrawCircle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerDrawCircle)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircleOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *圆的半径(屏幕像素单位)
       * </pre>
       *
       * <code>optional double radius = 4;</code>
       */
      public double getRadius() {
        return instance.getRadius();
      }
      /**
       * <pre>
       *圆的半径(屏幕像素单位)
       * </pre>
       *
       * <code>optional double radius = 4;</code>
       */
      public Builder setRadius(double value) {
        copyOnWrite();
        instance.setRadius(value);
        return this;
      }
      /**
       * <pre>
       *圆的半径(屏幕像素单位)
       * </pre>
       *
       * <code>optional double radius = 4;</code>
       */
      public Builder clearRadius() {
        copyOnWrite();
        instance.clearRadius();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerDrawCircle)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          radius_ = visitor.visitDouble(radius_ != 0D, radius_,
              other.radius_ != 0D, other.radius_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 33: {

                  radius_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerDrawCircle)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerDrawCircle();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawCircle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerDrawCircle> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerDrawCircle> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerDrawCircleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerDrawCircle)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerDrawCircle}
   */
  public  static final class EChart_ResultPLayerDrawCircle extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerDrawCircle, EChart_ResultPLayerDrawCircle.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerDrawCircle)
      EChart_ResultPLayerDrawCircleOrBuilder {
    private EChart_ResultPLayerDrawCircle() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerDrawCircle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerDrawCircle)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircleOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerDrawCircle)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerDrawCircle)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerDrawCircle();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawCircle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerDrawCircle> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerDrawCircle> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerFillCircleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerFillCircle)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *圆的半径(屏幕像素单位)
     * </pre>
     *
     * <code>optional double radius = 4;</code>
     */
    double getRadius();

    /**
     * <pre>
     *填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 5;</code>
     */
    boolean hasBrush();
    /**
     * <pre>
     *填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 5;</code>
     */
    com.ndk.echart.Echart.EChart_Brush getBrush();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerFillCircle}
   */
  public  static final class EChart_InvokePLayerFillCircle extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerFillCircle, EChart_InvokePLayerFillCircle.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerFillCircle)
      EChart_InvokePLayerFillCircleOrBuilder {
    private EChart_InvokePLayerFillCircle() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int RADIUS_FIELD_NUMBER = 4;
    private double radius_;
    /**
     * <pre>
     *圆的半径(屏幕像素单位)
     * </pre>
     *
     * <code>optional double radius = 4;</code>
     */
    public double getRadius() {
      return radius_;
    }
    /**
     * <pre>
     *圆的半径(屏幕像素单位)
     * </pre>
     *
     * <code>optional double radius = 4;</code>
     */
    private void setRadius(double value) {
      
      radius_ = value;
    }
    /**
     * <pre>
     *圆的半径(屏幕像素单位)
     * </pre>
     *
     * <code>optional double radius = 4;</code>
     */
    private void clearRadius() {
      
      radius_ = 0D;
    }

    public static final int BRUSH_FIELD_NUMBER = 5;
    private com.ndk.echart.Echart.EChart_Brush brush_;
    /**
     * <pre>
     *填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 5;</code>
     */
    public boolean hasBrush() {
      return brush_ != null;
    }
    /**
     * <pre>
     *填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 5;</code>
     */
    public com.ndk.echart.Echart.EChart_Brush getBrush() {
      return brush_ == null ? com.ndk.echart.Echart.EChart_Brush.getDefaultInstance() : brush_;
    }
    /**
     * <pre>
     *填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 5;</code>
     */
    private void setBrush(com.ndk.echart.Echart.EChart_Brush value) {
      if (value == null) {
        throw new NullPointerException();
      }
      brush_ = value;
      
      }
    /**
     * <pre>
     *填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 5;</code>
     */
    private void setBrush(
        com.ndk.echart.Echart.EChart_Brush.Builder builderForValue) {
      brush_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 5;</code>
     */
    private void mergeBrush(com.ndk.echart.Echart.EChart_Brush value) {
      if (brush_ != null &&
          brush_ != com.ndk.echart.Echart.EChart_Brush.getDefaultInstance()) {
        brush_ =
          com.ndk.echart.Echart.EChart_Brush.newBuilder(brush_).mergeFrom(value).buildPartial();
      } else {
        brush_ = value;
      }
      
    }
    /**
     * <pre>
     *填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 5;</code>
     */
    private void clearBrush() {  brush_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (radius_ != 0D) {
        output.writeDouble(4, radius_);
      }
      if (brush_ != null) {
        output.writeMessage(5, getBrush());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (radius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, radius_);
      }
      if (brush_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getBrush());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerFillCircle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerFillCircle)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircleOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *圆的半径(屏幕像素单位)
       * </pre>
       *
       * <code>optional double radius = 4;</code>
       */
      public double getRadius() {
        return instance.getRadius();
      }
      /**
       * <pre>
       *圆的半径(屏幕像素单位)
       * </pre>
       *
       * <code>optional double radius = 4;</code>
       */
      public Builder setRadius(double value) {
        copyOnWrite();
        instance.setRadius(value);
        return this;
      }
      /**
       * <pre>
       *圆的半径(屏幕像素单位)
       * </pre>
       *
       * <code>optional double radius = 4;</code>
       */
      public Builder clearRadius() {
        copyOnWrite();
        instance.clearRadius();
        return this;
      }

      /**
       * <pre>
       *填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 5;</code>
       */
      public boolean hasBrush() {
        return instance.hasBrush();
      }
      /**
       * <pre>
       *填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 5;</code>
       */
      public com.ndk.echart.Echart.EChart_Brush getBrush() {
        return instance.getBrush();
      }
      /**
       * <pre>
       *填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 5;</code>
       */
      public Builder setBrush(com.ndk.echart.Echart.EChart_Brush value) {
        copyOnWrite();
        instance.setBrush(value);
        return this;
        }
      /**
       * <pre>
       *填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 5;</code>
       */
      public Builder setBrush(
          com.ndk.echart.Echart.EChart_Brush.Builder builderForValue) {
        copyOnWrite();
        instance.setBrush(builderForValue);
        return this;
      }
      /**
       * <pre>
       *填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 5;</code>
       */
      public Builder mergeBrush(com.ndk.echart.Echart.EChart_Brush value) {
        copyOnWrite();
        instance.mergeBrush(value);
        return this;
      }
      /**
       * <pre>
       *填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 5;</code>
       */
      public Builder clearBrush() {  copyOnWrite();
        instance.clearBrush();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerFillCircle)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          radius_ = visitor.visitDouble(radius_ != 0D, radius_,
              other.radius_ != 0D, other.radius_);
          brush_ = visitor.visitMessage(brush_, other.brush_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 33: {

                  radius_ = input.readDouble();
                  break;
                }
                case 42: {
                  com.ndk.echart.Echart.EChart_Brush.Builder subBuilder = null;
                  if (brush_ != null) {
                    subBuilder = brush_.toBuilder();
                  }
                  brush_ = input.readMessage(com.ndk.echart.Echart.EChart_Brush.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(brush_);
                    brush_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerFillCircle)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerFillCircle();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerFillCircle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerFillCircle> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerFillCircle> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerFillCircleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerFillCircle)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerFillCircle}
   */
  public  static final class EChart_ResultPLayerFillCircle extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerFillCircle, EChart_ResultPLayerFillCircle.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerFillCircle)
      EChart_ResultPLayerFillCircleOrBuilder {
    private EChart_ResultPLayerFillCircle() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_FILL_CIRCLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerFillCircle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerFillCircle)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircleOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_FILL_CIRCLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerFillCircle)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerFillCircle)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerFillCircle();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerFillCircle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerFillCircle> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerFillCircle> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerShowTextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerShowText)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>optional string utf8 = 4;</code>
     */
    java.lang.String getUtf8();
    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>optional string utf8 = 4;</code>
     */
    com.google.protobuf.ByteString
        getUtf8Bytes();

    /**
     * <pre>
     *字体
     * </pre>
     *
     * <code>optional .echart.EChart_Font f = 5;</code>
     */
    boolean hasF();
    /**
     * <pre>
     *字体
     * </pre>
     *
     * <code>optional .echart.EChart_Font f = 5;</code>
     */
    com.ndk.echart.Echart.EChart_Font getF();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerShowText}
   */
  public  static final class EChart_InvokePLayerShowText extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerShowText, EChart_InvokePLayerShowText.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerShowText)
      EChart_InvokePLayerShowTextOrBuilder {
    private EChart_InvokePLayerShowText() {
      utf8_ = "";
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int UTF8_FIELD_NUMBER = 4;
    private java.lang.String utf8_;
    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>optional string utf8 = 4;</code>
     */
    public java.lang.String getUtf8() {
      return utf8_;
    }
    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>optional string utf8 = 4;</code>
     */
    public com.google.protobuf.ByteString
        getUtf8Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(utf8_);
    }
    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>optional string utf8 = 4;</code>
     */
    private void setUtf8(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      utf8_ = value;
    }
    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>optional string utf8 = 4;</code>
     */
    private void clearUtf8() {
      
      utf8_ = getDefaultInstance().getUtf8();
    }
    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>optional string utf8 = 4;</code>
     */
    private void setUtf8Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      utf8_ = value.toStringUtf8();
    }

    public static final int F_FIELD_NUMBER = 5;
    private com.ndk.echart.Echart.EChart_Font f_;
    /**
     * <pre>
     *字体
     * </pre>
     *
     * <code>optional .echart.EChart_Font f = 5;</code>
     */
    public boolean hasF() {
      return f_ != null;
    }
    /**
     * <pre>
     *字体
     * </pre>
     *
     * <code>optional .echart.EChart_Font f = 5;</code>
     */
    public com.ndk.echart.Echart.EChart_Font getF() {
      return f_ == null ? com.ndk.echart.Echart.EChart_Font.getDefaultInstance() : f_;
    }
    /**
     * <pre>
     *字体
     * </pre>
     *
     * <code>optional .echart.EChart_Font f = 5;</code>
     */
    private void setF(com.ndk.echart.Echart.EChart_Font value) {
      if (value == null) {
        throw new NullPointerException();
      }
      f_ = value;
      
      }
    /**
     * <pre>
     *字体
     * </pre>
     *
     * <code>optional .echart.EChart_Font f = 5;</code>
     */
    private void setF(
        com.ndk.echart.Echart.EChart_Font.Builder builderForValue) {
      f_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *字体
     * </pre>
     *
     * <code>optional .echart.EChart_Font f = 5;</code>
     */
    private void mergeF(com.ndk.echart.Echart.EChart_Font value) {
      if (f_ != null &&
          f_ != com.ndk.echart.Echart.EChart_Font.getDefaultInstance()) {
        f_ =
          com.ndk.echart.Echart.EChart_Font.newBuilder(f_).mergeFrom(value).buildPartial();
      } else {
        f_ = value;
      }
      
    }
    /**
     * <pre>
     *字体
     * </pre>
     *
     * <code>optional .echart.EChart_Font f = 5;</code>
     */
    private void clearF() {  f_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (!utf8_.isEmpty()) {
        output.writeString(4, getUtf8());
      }
      if (f_ != null) {
        output.writeMessage(5, getF());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (!utf8_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getUtf8());
      }
      if (f_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getF());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerShowText}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerShowText)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowTextOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *文本
       * </pre>
       *
       * <code>optional string utf8 = 4;</code>
       */
      public java.lang.String getUtf8() {
        return instance.getUtf8();
      }
      /**
       * <pre>
       *文本
       * </pre>
       *
       * <code>optional string utf8 = 4;</code>
       */
      public com.google.protobuf.ByteString
          getUtf8Bytes() {
        return instance.getUtf8Bytes();
      }
      /**
       * <pre>
       *文本
       * </pre>
       *
       * <code>optional string utf8 = 4;</code>
       */
      public Builder setUtf8(
          java.lang.String value) {
        copyOnWrite();
        instance.setUtf8(value);
        return this;
      }
      /**
       * <pre>
       *文本
       * </pre>
       *
       * <code>optional string utf8 = 4;</code>
       */
      public Builder clearUtf8() {
        copyOnWrite();
        instance.clearUtf8();
        return this;
      }
      /**
       * <pre>
       *文本
       * </pre>
       *
       * <code>optional string utf8 = 4;</code>
       */
      public Builder setUtf8Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUtf8Bytes(value);
        return this;
      }

      /**
       * <pre>
       *字体
       * </pre>
       *
       * <code>optional .echart.EChart_Font f = 5;</code>
       */
      public boolean hasF() {
        return instance.hasF();
      }
      /**
       * <pre>
       *字体
       * </pre>
       *
       * <code>optional .echart.EChart_Font f = 5;</code>
       */
      public com.ndk.echart.Echart.EChart_Font getF() {
        return instance.getF();
      }
      /**
       * <pre>
       *字体
       * </pre>
       *
       * <code>optional .echart.EChart_Font f = 5;</code>
       */
      public Builder setF(com.ndk.echart.Echart.EChart_Font value) {
        copyOnWrite();
        instance.setF(value);
        return this;
        }
      /**
       * <pre>
       *字体
       * </pre>
       *
       * <code>optional .echart.EChart_Font f = 5;</code>
       */
      public Builder setF(
          com.ndk.echart.Echart.EChart_Font.Builder builderForValue) {
        copyOnWrite();
        instance.setF(builderForValue);
        return this;
      }
      /**
       * <pre>
       *字体
       * </pre>
       *
       * <code>optional .echart.EChart_Font f = 5;</code>
       */
      public Builder mergeF(com.ndk.echart.Echart.EChart_Font value) {
        copyOnWrite();
        instance.mergeF(value);
        return this;
      }
      /**
       * <pre>
       *字体
       * </pre>
       *
       * <code>optional .echart.EChart_Font f = 5;</code>
       */
      public Builder clearF() {  copyOnWrite();
        instance.clearF();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerShowText)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          utf8_ = visitor.visitString(!utf8_.isEmpty(), utf8_,
              !other.utf8_.isEmpty(), other.utf8_);
          f_ = visitor.visitMessage(f_, other.f_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  utf8_ = s;
                  break;
                }
                case 42: {
                  com.ndk.echart.Echart.EChart_Font.Builder subBuilder = null;
                  if (f_ != null) {
                    subBuilder = f_.toBuilder();
                  }
                  f_ = input.readMessage(com.ndk.echart.Echart.EChart_Font.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(f_);
                    f_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerShowText)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerShowText();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerShowText getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerShowText> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerShowText> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerShowTextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerShowText)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerShowText}
   */
  public  static final class EChart_ResultPLayerShowText extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerShowText, EChart_ResultPLayerShowText.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerShowText)
      EChart_ResultPLayerShowTextOrBuilder {
    private EChart_ResultPLayerShowText() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_SHOW_TEXT
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerShowText}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerShowText)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowTextOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_SHOW_TEXT
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerShowText)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerShowText)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerShowText();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerShowText getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerShowText> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerShowText> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerDrawPngOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerDrawPng)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *png的文件名，不包含路径
     * </pre>
     *
     * <code>optional string filename = 4;</code>
     */
    java.lang.String getFilename();
    /**
     * <pre>
     *png的文件名，不包含路径
     * </pre>
     *
     * <code>optional string filename = 4;</code>
     */
    com.google.protobuf.ByteString
        getFilenameBytes();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerDrawPng}
   */
  public  static final class EChart_InvokePLayerDrawPng extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerDrawPng, EChart_InvokePLayerDrawPng.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerDrawPng)
      EChart_InvokePLayerDrawPngOrBuilder {
    private EChart_InvokePLayerDrawPng() {
      filename_ = "";
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int FILENAME_FIELD_NUMBER = 4;
    private java.lang.String filename_;
    /**
     * <pre>
     *png的文件名，不包含路径
     * </pre>
     *
     * <code>optional string filename = 4;</code>
     */
    public java.lang.String getFilename() {
      return filename_;
    }
    /**
     * <pre>
     *png的文件名，不包含路径
     * </pre>
     *
     * <code>optional string filename = 4;</code>
     */
    public com.google.protobuf.ByteString
        getFilenameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(filename_);
    }
    /**
     * <pre>
     *png的文件名，不包含路径
     * </pre>
     *
     * <code>optional string filename = 4;</code>
     */
    private void setFilename(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      filename_ = value;
    }
    /**
     * <pre>
     *png的文件名，不包含路径
     * </pre>
     *
     * <code>optional string filename = 4;</code>
     */
    private void clearFilename() {
      
      filename_ = getDefaultInstance().getFilename();
    }
    /**
     * <pre>
     *png的文件名，不包含路径
     * </pre>
     *
     * <code>optional string filename = 4;</code>
     */
    private void setFilenameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      filename_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (!filename_.isEmpty()) {
        output.writeString(4, getFilename());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (!filename_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getFilename());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerDrawPng}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerDrawPng)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPngOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *png的文件名，不包含路径
       * </pre>
       *
       * <code>optional string filename = 4;</code>
       */
      public java.lang.String getFilename() {
        return instance.getFilename();
      }
      /**
       * <pre>
       *png的文件名，不包含路径
       * </pre>
       *
       * <code>optional string filename = 4;</code>
       */
      public com.google.protobuf.ByteString
          getFilenameBytes() {
        return instance.getFilenameBytes();
      }
      /**
       * <pre>
       *png的文件名，不包含路径
       * </pre>
       *
       * <code>optional string filename = 4;</code>
       */
      public Builder setFilename(
          java.lang.String value) {
        copyOnWrite();
        instance.setFilename(value);
        return this;
      }
      /**
       * <pre>
       *png的文件名，不包含路径
       * </pre>
       *
       * <code>optional string filename = 4;</code>
       */
      public Builder clearFilename() {
        copyOnWrite();
        instance.clearFilename();
        return this;
      }
      /**
       * <pre>
       *png的文件名，不包含路径
       * </pre>
       *
       * <code>optional string filename = 4;</code>
       */
      public Builder setFilenameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFilenameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerDrawPng)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          filename_ = visitor.visitString(!filename_.isEmpty(), filename_,
              !other.filename_.isEmpty(), other.filename_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  filename_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerDrawPng)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerDrawPng();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerDrawPng getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerDrawPng> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerDrawPng> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerDrawPngOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerDrawPng)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerDrawPng}
   */
  public  static final class EChart_ResultPLayerDrawPng extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerDrawPng, EChart_ResultPLayerDrawPng.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerDrawPng)
      EChart_ResultPLayerDrawPngOrBuilder {
    private EChart_ResultPLayerDrawPng() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_DRAW_PNG
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerDrawPng}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerDrawPng)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPngOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_DRAW_PNG
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerDrawPng)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerDrawPng)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerDrawPng();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerDrawPng getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerDrawPng> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerDrawPng> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerBeginPolygonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerBeginPolygon)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerBeginPolygon}
   */
  public  static final class EChart_InvokePLayerBeginPolygon extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerBeginPolygon, EChart_InvokePLayerBeginPolygon.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerBeginPolygon)
      EChart_InvokePLayerBeginPolygonOrBuilder {
    private EChart_InvokePLayerBeginPolygon() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerBeginPolygon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerBeginPolygon)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygonOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerBeginPolygon)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerBeginPolygon)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerBeginPolygon();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolygon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerBeginPolygon> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerBeginPolygon> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerBeginPolygonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerBeginPolygon)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerBeginPolygon}
   */
  public  static final class EChart_ResultPLayerBeginPolygon extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerBeginPolygon, EChart_ResultPLayerBeginPolygon.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerBeginPolygon)
      EChart_ResultPLayerBeginPolygonOrBuilder {
    private EChart_ResultPLayerBeginPolygon() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerBeginPolygon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerBeginPolygon)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygonOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerBeginPolygon)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerBeginPolygon)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerBeginPolygon();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolygon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerBeginPolygon> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerBeginPolygon> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerEndPolygonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerEndPolygon)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *可选的填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 4;</code>
     */
    boolean hasBrush();
    /**
     * <pre>
     *可选的填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 4;</code>
     */
    com.ndk.echart.Echart.EChart_Brush getBrush();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerEndPolygon}
   */
  public  static final class EChart_InvokePLayerEndPolygon extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerEndPolygon, EChart_InvokePLayerEndPolygon.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerEndPolygon)
      EChart_InvokePLayerEndPolygonOrBuilder {
    private EChart_InvokePLayerEndPolygon() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int BRUSH_FIELD_NUMBER = 4;
    private com.ndk.echart.Echart.EChart_Brush brush_;
    /**
     * <pre>
     *可选的填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 4;</code>
     */
    public boolean hasBrush() {
      return brush_ != null;
    }
    /**
     * <pre>
     *可选的填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 4;</code>
     */
    public com.ndk.echart.Echart.EChart_Brush getBrush() {
      return brush_ == null ? com.ndk.echart.Echart.EChart_Brush.getDefaultInstance() : brush_;
    }
    /**
     * <pre>
     *可选的填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 4;</code>
     */
    private void setBrush(com.ndk.echart.Echart.EChart_Brush value) {
      if (value == null) {
        throw new NullPointerException();
      }
      brush_ = value;
      
      }
    /**
     * <pre>
     *可选的填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 4;</code>
     */
    private void setBrush(
        com.ndk.echart.Echart.EChart_Brush.Builder builderForValue) {
      brush_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *可选的填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 4;</code>
     */
    private void mergeBrush(com.ndk.echart.Echart.EChart_Brush value) {
      if (brush_ != null &&
          brush_ != com.ndk.echart.Echart.EChart_Brush.getDefaultInstance()) {
        brush_ =
          com.ndk.echart.Echart.EChart_Brush.newBuilder(brush_).mergeFrom(value).buildPartial();
      } else {
        brush_ = value;
      }
      
    }
    /**
     * <pre>
     *可选的填充方式
     * </pre>
     *
     * <code>optional .echart.EChart_Brush brush = 4;</code>
     */
    private void clearBrush() {  brush_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (brush_ != null) {
        output.writeMessage(4, getBrush());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (brush_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBrush());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerEndPolygon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerEndPolygon)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygonOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *可选的填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 4;</code>
       */
      public boolean hasBrush() {
        return instance.hasBrush();
      }
      /**
       * <pre>
       *可选的填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 4;</code>
       */
      public com.ndk.echart.Echart.EChart_Brush getBrush() {
        return instance.getBrush();
      }
      /**
       * <pre>
       *可选的填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 4;</code>
       */
      public Builder setBrush(com.ndk.echart.Echart.EChart_Brush value) {
        copyOnWrite();
        instance.setBrush(value);
        return this;
        }
      /**
       * <pre>
       *可选的填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 4;</code>
       */
      public Builder setBrush(
          com.ndk.echart.Echart.EChart_Brush.Builder builderForValue) {
        copyOnWrite();
        instance.setBrush(builderForValue);
        return this;
      }
      /**
       * <pre>
       *可选的填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 4;</code>
       */
      public Builder mergeBrush(com.ndk.echart.Echart.EChart_Brush value) {
        copyOnWrite();
        instance.mergeBrush(value);
        return this;
      }
      /**
       * <pre>
       *可选的填充方式
       * </pre>
       *
       * <code>optional .echart.EChart_Brush brush = 4;</code>
       */
      public Builder clearBrush() {  copyOnWrite();
        instance.clearBrush();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerEndPolygon)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          brush_ = visitor.visitMessage(brush_, other.brush_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  com.ndk.echart.Echart.EChart_Brush.Builder subBuilder = null;
                  if (brush_ != null) {
                    subBuilder = brush_.toBuilder();
                  }
                  brush_ = input.readMessage(com.ndk.echart.Echart.EChart_Brush.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(brush_);
                    brush_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerEndPolygon)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerEndPolygon();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolygon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerEndPolygon> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerEndPolygon> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerEndPolygonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerEndPolygon)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerEndPolygon}
   */
  public  static final class EChart_ResultPLayerEndPolygon extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerEndPolygon, EChart_ResultPLayerEndPolygon.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerEndPolygon)
      EChart_ResultPLayerEndPolygonOrBuilder {
    private EChart_ResultPLayerEndPolygon() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYGON
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerEndPolygon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerEndPolygon)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygonOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYGON
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerEndPolygon)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerEndPolygon)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerEndPolygon();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolygon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerEndPolygon> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerEndPolygon> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerPolygonLineToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerPolygonLineTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    boolean hasPt();
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    com.ndk.echart.Echart.EChart_GeoPoint getPt();
  }
  /**
   * <pre>
   *BeginPolygon和EndPolygon之间，只能有PolygonLineTo和PolygonMoveTo指令，不可有其他指令
   * </pre>
   *
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerPolygonLineTo}
   */
  public  static final class EChart_InvokePLayerPolygonLineTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerPolygonLineTo, EChart_InvokePLayerPolygonLineTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerPolygonLineTo)
      EChart_InvokePLayerPolygonLineToOrBuilder {
    private EChart_InvokePLayerPolygonLineTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int PT_FIELD_NUMBER = 4;
    private com.ndk.echart.Echart.EChart_GeoPoint pt_;
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public boolean hasPt() {
      return pt_ != null;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
      return pt_ == null ? com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance() : pt_;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pt_ = value;
      
      }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(
        com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
      pt_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (pt_ != null &&
          pt_ != com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance()) {
        pt_ =
          com.ndk.echart.Echart.EChart_GeoPoint.newBuilder(pt_).mergeFrom(value).buildPartial();
      } else {
        pt_ = value;
      }
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void clearPt() {  pt_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (pt_ != null) {
        output.writeMessage(4, getPt());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (pt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPt());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *BeginPolygon和EndPolygon之间，只能有PolygonLineTo和PolygonMoveTo指令，不可有其他指令
     * </pre>
     *
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerPolygonLineTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerPolygonLineTo)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public boolean hasPt() {
        return instance.hasPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
        return instance.getPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.setPt(value);
        return this;
        }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(
          com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setPt(builderForValue);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.mergePt(value);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder clearPt() {  copyOnWrite();
        instance.clearPt();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerPolygonLineTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          pt_ = visitor.visitMessage(pt_, other.pt_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  com.ndk.echart.Echart.EChart_GeoPoint.Builder subBuilder = null;
                  if (pt_ != null) {
                    subBuilder = pt_.toBuilder();
                  }
                  pt_ = input.readMessage(com.ndk.echart.Echart.EChart_GeoPoint.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pt_);
                    pt_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerPolygonLineTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerPolygonLineTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonLineTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerPolygonLineTo> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerPolygonLineTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerPolygonLineToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerPolygonLineTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerPolygonLineTo}
   */
  public  static final class EChart_ResultPLayerPolygonLineTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerPolygonLineTo, EChart_ResultPLayerPolygonLineTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerPolygonLineTo)
      EChart_ResultPLayerPolygonLineToOrBuilder {
    private EChart_ResultPLayerPolygonLineTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerPolygonLineTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerPolygonLineTo)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerPolygonLineTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerPolygonLineTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerPolygonLineTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonLineTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerPolygonLineTo> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerPolygonLineTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerPolygonMoveToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerPolygonMoveTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    boolean hasPt();
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    com.ndk.echart.Echart.EChart_GeoPoint getPt();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerPolygonMoveTo}
   */
  public  static final class EChart_InvokePLayerPolygonMoveTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerPolygonMoveTo, EChart_InvokePLayerPolygonMoveTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerPolygonMoveTo)
      EChart_InvokePLayerPolygonMoveToOrBuilder {
    private EChart_InvokePLayerPolygonMoveTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int PT_FIELD_NUMBER = 4;
    private com.ndk.echart.Echart.EChart_GeoPoint pt_;
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public boolean hasPt() {
      return pt_ != null;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
      return pt_ == null ? com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance() : pt_;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pt_ = value;
      
      }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(
        com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
      pt_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (pt_ != null &&
          pt_ != com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance()) {
        pt_ =
          com.ndk.echart.Echart.EChart_GeoPoint.newBuilder(pt_).mergeFrom(value).buildPartial();
      } else {
        pt_ = value;
      }
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void clearPt() {  pt_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (pt_ != null) {
        output.writeMessage(4, getPt());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (pt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPt());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerPolygonMoveTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerPolygonMoveTo)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public boolean hasPt() {
        return instance.hasPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
        return instance.getPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.setPt(value);
        return this;
        }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(
          com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setPt(builderForValue);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.mergePt(value);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder clearPt() {  copyOnWrite();
        instance.clearPt();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerPolygonMoveTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          pt_ = visitor.visitMessage(pt_, other.pt_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  com.ndk.echart.Echart.EChart_GeoPoint.Builder subBuilder = null;
                  if (pt_ != null) {
                    subBuilder = pt_.toBuilder();
                  }
                  pt_ = input.readMessage(com.ndk.echart.Echart.EChart_GeoPoint.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pt_);
                    pt_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerPolygonMoveTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerPolygonMoveTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolygonMoveTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerPolygonMoveTo> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerPolygonMoveTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerPolygonMoveToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerPolygonMoveTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerPolygonMoveTo}
   */
  public  static final class EChart_ResultPLayerPolygonMoveTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerPolygonMoveTo, EChart_ResultPLayerPolygonMoveTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerPolygonMoveTo)
      EChart_ResultPLayerPolygonMoveToOrBuilder {
    private EChart_ResultPLayerPolygonMoveTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerPolygonMoveTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerPolygonMoveTo)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYGON_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerPolygonMoveTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerPolygonMoveTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerPolygonMoveTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolygonMoveTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerPolygonMoveTo> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerPolygonMoveTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerBeginPolylineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerBeginPolyline)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerBeginPolyline}
   */
  public  static final class EChart_InvokePLayerBeginPolyline extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerBeginPolyline, EChart_InvokePLayerBeginPolyline.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerBeginPolyline)
      EChart_InvokePLayerBeginPolylineOrBuilder {
    private EChart_InvokePLayerBeginPolyline() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerBeginPolyline}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerBeginPolyline)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolylineOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerBeginPolyline)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerBeginPolyline)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerBeginPolyline();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerBeginPolyline getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerBeginPolyline> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerBeginPolyline> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerBeginPolylineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerBeginPolyline)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerBeginPolyline}
   */
  public  static final class EChart_ResultPLayerBeginPolyline extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerBeginPolyline, EChart_ResultPLayerBeginPolyline.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerBeginPolyline)
      EChart_ResultPLayerBeginPolylineOrBuilder {
    private EChart_ResultPLayerBeginPolyline() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_BEGIN_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerBeginPolyline}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerBeginPolyline)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolylineOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_BEGIN_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerBeginPolyline)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerBeginPolyline)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerBeginPolyline();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerBeginPolyline getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerBeginPolyline> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerBeginPolyline> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerEndPolylineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerEndPolyline)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerEndPolyline}
   */
  public  static final class EChart_InvokePLayerEndPolyline extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerEndPolyline, EChart_InvokePLayerEndPolyline.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerEndPolyline)
      EChart_InvokePLayerEndPolylineOrBuilder {
    private EChart_InvokePLayerEndPolyline() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerEndPolyline}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerEndPolyline)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolylineOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerEndPolyline)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerEndPolyline)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerEndPolyline();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerEndPolyline getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerEndPolyline> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerEndPolyline> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerEndPolylineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerEndPolyline)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerEndPolyline}
   */
  public  static final class EChart_ResultPLayerEndPolyline extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerEndPolyline, EChart_ResultPLayerEndPolyline.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerEndPolyline)
      EChart_ResultPLayerEndPolylineOrBuilder {
    private EChart_ResultPLayerEndPolyline() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_END_POLYLINE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerEndPolyline}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerEndPolyline)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolylineOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_END_POLYLINE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerEndPolyline)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerEndPolyline)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerEndPolyline();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerEndPolyline getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerEndPolyline> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerEndPolyline> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerPolylineMoveToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerPolylineMoveTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    boolean hasPt();
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    com.ndk.echart.Echart.EChart_GeoPoint getPt();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerPolylineMoveTo}
   */
  public  static final class EChart_InvokePLayerPolylineMoveTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerPolylineMoveTo, EChart_InvokePLayerPolylineMoveTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerPolylineMoveTo)
      EChart_InvokePLayerPolylineMoveToOrBuilder {
    private EChart_InvokePLayerPolylineMoveTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int PT_FIELD_NUMBER = 4;
    private com.ndk.echart.Echart.EChart_GeoPoint pt_;
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public boolean hasPt() {
      return pt_ != null;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
      return pt_ == null ? com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance() : pt_;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pt_ = value;
      
      }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(
        com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
      pt_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (pt_ != null &&
          pt_ != com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance()) {
        pt_ =
          com.ndk.echart.Echart.EChart_GeoPoint.newBuilder(pt_).mergeFrom(value).buildPartial();
      } else {
        pt_ = value;
      }
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void clearPt() {  pt_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (pt_ != null) {
        output.writeMessage(4, getPt());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (pt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPt());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerPolylineMoveTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerPolylineMoveTo)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public boolean hasPt() {
        return instance.hasPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
        return instance.getPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.setPt(value);
        return this;
        }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(
          com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setPt(builderForValue);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.mergePt(value);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder clearPt() {  copyOnWrite();
        instance.clearPt();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerPolylineMoveTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          pt_ = visitor.visitMessage(pt_, other.pt_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  com.ndk.echart.Echart.EChart_GeoPoint.Builder subBuilder = null;
                  if (pt_ != null) {
                    subBuilder = pt_.toBuilder();
                  }
                  pt_ = input.readMessage(com.ndk.echart.Echart.EChart_GeoPoint.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pt_);
                    pt_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerPolylineMoveTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerPolylineMoveTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineMoveTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerPolylineMoveTo> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerPolylineMoveTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerPolylineMoveToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerPolylineMoveTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerPolylineMoveTo}
   */
  public  static final class EChart_ResultPLayerPolylineMoveTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerPolylineMoveTo, EChart_ResultPLayerPolylineMoveTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerPolylineMoveTo)
      EChart_ResultPLayerPolylineMoveToOrBuilder {
    private EChart_ResultPLayerPolylineMoveTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerPolylineMoveTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerPolylineMoveTo)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_MOVE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerPolylineMoveTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerPolylineMoveTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerPolylineMoveTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineMoveTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerPolylineMoveTo> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerPolylineMoveTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokePLayerPolylineLineToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_InvokePLayerPolylineLineTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    int getSublayerId();

    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    boolean hasPt();
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    com.ndk.echart.Echart.EChart_GeoPoint getPt();
  }
  /**
   * <pre>
   *BeginPolyline和EndPolyline之间，只能有PolylineLineTo和PolylineMoveTo指令，不可有其他指令
   * </pre>
   *
   * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerPolylineLineTo}
   */
  public  static final class EChart_InvokePLayerPolylineLineTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokePLayerPolylineLineTo, EChart_InvokePLayerPolylineLineTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_InvokePLayerPolylineLineTo)
      EChart_InvokePLayerPolylineLineToOrBuilder {
    private EChart_InvokePLayerPolylineLineTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *持久化图层的id
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int SUBLAYER_ID_FIELD_NUMBER = 3;
    private int sublayerId_;
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    public int getSublayerId() {
      return sublayerId_;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void setSublayerId(int value) {
      
      sublayerId_ = value;
    }
    /**
     * <pre>
     *自定义图层的id	
     * </pre>
     *
     * <code>optional uint32 sublayer_id = 3;</code>
     */
    private void clearSublayerId() {
      
      sublayerId_ = 0;
    }

    public static final int PT_FIELD_NUMBER = 4;
    private com.ndk.echart.Echart.EChart_GeoPoint pt_;
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public boolean hasPt() {
      return pt_ != null;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
      return pt_ == null ? com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance() : pt_;
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      pt_ = value;
      
      }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void setPt(
        com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
      pt_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
      if (pt_ != null &&
          pt_ != com.ndk.echart.Echart.EChart_GeoPoint.getDefaultInstance()) {
        pt_ =
          com.ndk.echart.Echart.EChart_GeoPoint.newBuilder(pt_).mergeFrom(value).buildPartial();
      } else {
        pt_ = value;
      }
      
    }
    /**
     * <pre>
     *目的位置(屏幕坐标)
     * </pre>
     *
     * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
     */
    private void clearPt() {  pt_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (sublayerId_ != 0) {
        output.writeUInt32(3, sublayerId_);
      }
      if (pt_ != null) {
        output.writeMessage(4, getPt());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (sublayerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sublayerId_);
      }
      if (pt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPt());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *BeginPolyline和EndPolyline之间，只能有PolylineLineTo和PolylineMoveTo指令，不可有其他指令
     * </pre>
     *
     * Protobuf type {@code echart.persistablelayer.EChart_InvokePLayerPolylineLineTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_InvokePLayerPolylineLineTo)
        com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *持久化图层的id
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public int getSublayerId() {
        return instance.getSublayerId();
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder setSublayerId(int value) {
        copyOnWrite();
        instance.setSublayerId(value);
        return this;
      }
      /**
       * <pre>
       *自定义图层的id	
       * </pre>
       *
       * <code>optional uint32 sublayer_id = 3;</code>
       */
      public Builder clearSublayerId() {
        copyOnWrite();
        instance.clearSublayerId();
        return this;
      }

      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public boolean hasPt() {
        return instance.hasPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public com.ndk.echart.Echart.EChart_GeoPoint getPt() {
        return instance.getPt();
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.setPt(value);
        return this;
        }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder setPt(
          com.ndk.echart.Echart.EChart_GeoPoint.Builder builderForValue) {
        copyOnWrite();
        instance.setPt(builderForValue);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder mergePt(com.ndk.echart.Echart.EChart_GeoPoint value) {
        copyOnWrite();
        instance.mergePt(value);
        return this;
      }
      /**
       * <pre>
       *目的位置(屏幕坐标)
       * </pre>
       *
       * <code>optional .echart.EChart_GeoPoint pt = 4;</code>
       */
      public Builder clearPt() {  copyOnWrite();
        instance.clearPt();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_InvokePLayerPolylineLineTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo other = (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          sublayerId_ = visitor.visitInt(sublayerId_ != 0, sublayerId_,
              other.sublayerId_ != 0, other.sublayerId_);
          pt_ = visitor.visitMessage(pt_, other.pt_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  sublayerId_ = input.readUInt32();
                  break;
                }
                case 34: {
                  com.ndk.echart.Echart.EChart_GeoPoint.Builder subBuilder = null;
                  if (pt_ != null) {
                    subBuilder = pt_.toBuilder();
                  }
                  pt_ = input.readMessage(com.ndk.echart.Echart.EChart_GeoPoint.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pt_);
                    pt_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_InvokePLayerPolylineLineTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokePLayerPolylineLineTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_InvokePLayerPolylineLineTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokePLayerPolylineLineTo> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokePLayerPolylineLineTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultPLayerPolylineLineToOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.persistablelayer.EChart_ResultPLayerPolylineLineTo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerPolylineLineTo}
   */
  public  static final class EChart_ResultPLayerPolylineLineTo extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultPLayerPolylineLineTo, EChart_ResultPLayerPolylineLineTo.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.persistablelayer.EChart_ResultPLayerPolylineLineTo)
      EChart_ResultPLayerPolylineLineToOrBuilder {
    private EChart_ResultPLayerPolylineLineTo() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.persistablelayer.EChart_ResultPLayerPolylineLineTo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.persistablelayer.EChart_ResultPLayerPolylineLineTo)
        com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineToOrBuilder {
      // Construct using com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_PLAYER_POLYLINE_LINE_TO
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.persistablelayer.EChart_ResultPLayerPolylineLineTo)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo other = (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.persistablelayer.EChart_ResultPLayerPolylineLineTo)
    private static final com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultPLayerPolylineLineTo();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartPersistablelayer.EChart_ResultPLayerPolylineLineTo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultPLayerPolylineLineTo> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultPLayerPolylineLineTo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
