// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: echart.vessellayer.proto

package com.ndk.echart;

public final class EchartVessellayer {
  private EchartVessellayer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface EChart_VesselPostionReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_VesselPostionReport)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MMSI号
     * </pre>
     *
     * <code>optional uint32 mmsi = 1;</code>
     */
    int getMmsi();

    /**
     * <pre>
     *转向率，单位：度/分
     * </pre>
     *
     * <code>optional float rot = 2;</code>
     */
    float getRot();

    /**
     * <pre>
     *对地航速，单位：节
     * </pre>
     *
     * <code>optional float sog = 3;</code>
     */
    float getSog();

    /**
     * <pre>
     *经度，单位：度
     * </pre>
     *
     * <code>optional float longitude = 4;</code>
     */
    float getLongitude();

    /**
     * <pre>
     *纬度，单位：度
     * </pre>
     *
     * <code>optional float latitude = 5;</code>
     */
    float getLatitude();

    /**
     * <pre>
     *实际航向，单位：度
     * </pre>
     *
     * <code>optional float true_heading = 6;</code>
     */
    float getTrueHeading();

    /**
     * <pre>
     *航行状态
     * </pre>
     *
     * <code>optional uint32 navigational_status = 7;</code>
     */
    int getNavigationalStatus();

    /**
     * <pre>
     *时间戳，utc时间的秒数
     * </pre>
     *
     * <code>optional uint32 timestamp = 8;</code>
     */
    int getTimestamp();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_VesselPostionReport}
   */
  public  static final class EChart_VesselPostionReport extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_VesselPostionReport, EChart_VesselPostionReport.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_VesselPostionReport)
      EChart_VesselPostionReportOrBuilder {
    private EChart_VesselPostionReport() {
    }
    public static final int MMSI_FIELD_NUMBER = 1;
    private int mmsi_;
    /**
     * <pre>
     *MMSI号
     * </pre>
     *
     * <code>optional uint32 mmsi = 1;</code>
     */
    public int getMmsi() {
      return mmsi_;
    }
    /**
     * <pre>
     *MMSI号
     * </pre>
     *
     * <code>optional uint32 mmsi = 1;</code>
     */
    private void setMmsi(int value) {
      
      mmsi_ = value;
    }
    /**
     * <pre>
     *MMSI号
     * </pre>
     *
     * <code>optional uint32 mmsi = 1;</code>
     */
    private void clearMmsi() {
      
      mmsi_ = 0;
    }

    public static final int ROT_FIELD_NUMBER = 2;
    private float rot_;
    /**
     * <pre>
     *转向率，单位：度/分
     * </pre>
     *
     * <code>optional float rot = 2;</code>
     */
    public float getRot() {
      return rot_;
    }
    /**
     * <pre>
     *转向率，单位：度/分
     * </pre>
     *
     * <code>optional float rot = 2;</code>
     */
    private void setRot(float value) {
      
      rot_ = value;
    }
    /**
     * <pre>
     *转向率，单位：度/分
     * </pre>
     *
     * <code>optional float rot = 2;</code>
     */
    private void clearRot() {
      
      rot_ = 0F;
    }

    public static final int SOG_FIELD_NUMBER = 3;
    private float sog_;
    /**
     * <pre>
     *对地航速，单位：节
     * </pre>
     *
     * <code>optional float sog = 3;</code>
     */
    public float getSog() {
      return sog_;
    }
    /**
     * <pre>
     *对地航速，单位：节
     * </pre>
     *
     * <code>optional float sog = 3;</code>
     */
    private void setSog(float value) {
      
      sog_ = value;
    }
    /**
     * <pre>
     *对地航速，单位：节
     * </pre>
     *
     * <code>optional float sog = 3;</code>
     */
    private void clearSog() {
      
      sog_ = 0F;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 4;
    private float longitude_;
    /**
     * <pre>
     *经度，单位：度
     * </pre>
     *
     * <code>optional float longitude = 4;</code>
     */
    public float getLongitude() {
      return longitude_;
    }
    /**
     * <pre>
     *经度，单位：度
     * </pre>
     *
     * <code>optional float longitude = 4;</code>
     */
    private void setLongitude(float value) {
      
      longitude_ = value;
    }
    /**
     * <pre>
     *经度，单位：度
     * </pre>
     *
     * <code>optional float longitude = 4;</code>
     */
    private void clearLongitude() {
      
      longitude_ = 0F;
    }

    public static final int LATITUDE_FIELD_NUMBER = 5;
    private float latitude_;
    /**
     * <pre>
     *纬度，单位：度
     * </pre>
     *
     * <code>optional float latitude = 5;</code>
     */
    public float getLatitude() {
      return latitude_;
    }
    /**
     * <pre>
     *纬度，单位：度
     * </pre>
     *
     * <code>optional float latitude = 5;</code>
     */
    private void setLatitude(float value) {
      
      latitude_ = value;
    }
    /**
     * <pre>
     *纬度，单位：度
     * </pre>
     *
     * <code>optional float latitude = 5;</code>
     */
    private void clearLatitude() {
      
      latitude_ = 0F;
    }

    public static final int TRUE_HEADING_FIELD_NUMBER = 6;
    private float trueHeading_;
    /**
     * <pre>
     *实际航向，单位：度
     * </pre>
     *
     * <code>optional float true_heading = 6;</code>
     */
    public float getTrueHeading() {
      return trueHeading_;
    }
    /**
     * <pre>
     *实际航向，单位：度
     * </pre>
     *
     * <code>optional float true_heading = 6;</code>
     */
    private void setTrueHeading(float value) {
      
      trueHeading_ = value;
    }
    /**
     * <pre>
     *实际航向，单位：度
     * </pre>
     *
     * <code>optional float true_heading = 6;</code>
     */
    private void clearTrueHeading() {
      
      trueHeading_ = 0F;
    }

    public static final int NAVIGATIONAL_STATUS_FIELD_NUMBER = 7;
    private int navigationalStatus_;
    /**
     * <pre>
     *航行状态
     * </pre>
     *
     * <code>optional uint32 navigational_status = 7;</code>
     */
    public int getNavigationalStatus() {
      return navigationalStatus_;
    }
    /**
     * <pre>
     *航行状态
     * </pre>
     *
     * <code>optional uint32 navigational_status = 7;</code>
     */
    private void setNavigationalStatus(int value) {
      
      navigationalStatus_ = value;
    }
    /**
     * <pre>
     *航行状态
     * </pre>
     *
     * <code>optional uint32 navigational_status = 7;</code>
     */
    private void clearNavigationalStatus() {
      
      navigationalStatus_ = 0;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 8;
    private int timestamp_;
    /**
     * <pre>
     *时间戳，utc时间的秒数
     * </pre>
     *
     * <code>optional uint32 timestamp = 8;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }
    /**
     * <pre>
     *时间戳，utc时间的秒数
     * </pre>
     *
     * <code>optional uint32 timestamp = 8;</code>
     */
    private void setTimestamp(int value) {
      
      timestamp_ = value;
    }
    /**
     * <pre>
     *时间戳，utc时间的秒数
     * </pre>
     *
     * <code>optional uint32 timestamp = 8;</code>
     */
    private void clearTimestamp() {
      
      timestamp_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mmsi_ != 0) {
        output.writeUInt32(1, mmsi_);
      }
      if (rot_ != 0F) {
        output.writeFloat(2, rot_);
      }
      if (sog_ != 0F) {
        output.writeFloat(3, sog_);
      }
      if (longitude_ != 0F) {
        output.writeFloat(4, longitude_);
      }
      if (latitude_ != 0F) {
        output.writeFloat(5, latitude_);
      }
      if (trueHeading_ != 0F) {
        output.writeFloat(6, trueHeading_);
      }
      if (navigationalStatus_ != 0) {
        output.writeUInt32(7, navigationalStatus_);
      }
      if (timestamp_ != 0) {
        output.writeUInt32(8, timestamp_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mmsi_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, mmsi_);
      }
      if (rot_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, rot_);
      }
      if (sog_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, sog_);
      }
      if (longitude_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, longitude_);
      }
      if (latitude_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, latitude_);
      }
      if (trueHeading_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, trueHeading_);
      }
      if (navigationalStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, navigationalStatus_);
      }
      if (timestamp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, timestamp_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_VesselPostionReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_VesselPostionReport)
        com.ndk.echart.EchartVessellayer.EChart_VesselPostionReportOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MMSI号
       * </pre>
       *
       * <code>optional uint32 mmsi = 1;</code>
       */
      public int getMmsi() {
        return instance.getMmsi();
      }
      /**
       * <pre>
       *MMSI号
       * </pre>
       *
       * <code>optional uint32 mmsi = 1;</code>
       */
      public Builder setMmsi(int value) {
        copyOnWrite();
        instance.setMmsi(value);
        return this;
      }
      /**
       * <pre>
       *MMSI号
       * </pre>
       *
       * <code>optional uint32 mmsi = 1;</code>
       */
      public Builder clearMmsi() {
        copyOnWrite();
        instance.clearMmsi();
        return this;
      }

      /**
       * <pre>
       *转向率，单位：度/分
       * </pre>
       *
       * <code>optional float rot = 2;</code>
       */
      public float getRot() {
        return instance.getRot();
      }
      /**
       * <pre>
       *转向率，单位：度/分
       * </pre>
       *
       * <code>optional float rot = 2;</code>
       */
      public Builder setRot(float value) {
        copyOnWrite();
        instance.setRot(value);
        return this;
      }
      /**
       * <pre>
       *转向率，单位：度/分
       * </pre>
       *
       * <code>optional float rot = 2;</code>
       */
      public Builder clearRot() {
        copyOnWrite();
        instance.clearRot();
        return this;
      }

      /**
       * <pre>
       *对地航速，单位：节
       * </pre>
       *
       * <code>optional float sog = 3;</code>
       */
      public float getSog() {
        return instance.getSog();
      }
      /**
       * <pre>
       *对地航速，单位：节
       * </pre>
       *
       * <code>optional float sog = 3;</code>
       */
      public Builder setSog(float value) {
        copyOnWrite();
        instance.setSog(value);
        return this;
      }
      /**
       * <pre>
       *对地航速，单位：节
       * </pre>
       *
       * <code>optional float sog = 3;</code>
       */
      public Builder clearSog() {
        copyOnWrite();
        instance.clearSog();
        return this;
      }

      /**
       * <pre>
       *经度，单位：度
       * </pre>
       *
       * <code>optional float longitude = 4;</code>
       */
      public float getLongitude() {
        return instance.getLongitude();
      }
      /**
       * <pre>
       *经度，单位：度
       * </pre>
       *
       * <code>optional float longitude = 4;</code>
       */
      public Builder setLongitude(float value) {
        copyOnWrite();
        instance.setLongitude(value);
        return this;
      }
      /**
       * <pre>
       *经度，单位：度
       * </pre>
       *
       * <code>optional float longitude = 4;</code>
       */
      public Builder clearLongitude() {
        copyOnWrite();
        instance.clearLongitude();
        return this;
      }

      /**
       * <pre>
       *纬度，单位：度
       * </pre>
       *
       * <code>optional float latitude = 5;</code>
       */
      public float getLatitude() {
        return instance.getLatitude();
      }
      /**
       * <pre>
       *纬度，单位：度
       * </pre>
       *
       * <code>optional float latitude = 5;</code>
       */
      public Builder setLatitude(float value) {
        copyOnWrite();
        instance.setLatitude(value);
        return this;
      }
      /**
       * <pre>
       *纬度，单位：度
       * </pre>
       *
       * <code>optional float latitude = 5;</code>
       */
      public Builder clearLatitude() {
        copyOnWrite();
        instance.clearLatitude();
        return this;
      }

      /**
       * <pre>
       *实际航向，单位：度
       * </pre>
       *
       * <code>optional float true_heading = 6;</code>
       */
      public float getTrueHeading() {
        return instance.getTrueHeading();
      }
      /**
       * <pre>
       *实际航向，单位：度
       * </pre>
       *
       * <code>optional float true_heading = 6;</code>
       */
      public Builder setTrueHeading(float value) {
        copyOnWrite();
        instance.setTrueHeading(value);
        return this;
      }
      /**
       * <pre>
       *实际航向，单位：度
       * </pre>
       *
       * <code>optional float true_heading = 6;</code>
       */
      public Builder clearTrueHeading() {
        copyOnWrite();
        instance.clearTrueHeading();
        return this;
      }

      /**
       * <pre>
       *航行状态
       * </pre>
       *
       * <code>optional uint32 navigational_status = 7;</code>
       */
      public int getNavigationalStatus() {
        return instance.getNavigationalStatus();
      }
      /**
       * <pre>
       *航行状态
       * </pre>
       *
       * <code>optional uint32 navigational_status = 7;</code>
       */
      public Builder setNavigationalStatus(int value) {
        copyOnWrite();
        instance.setNavigationalStatus(value);
        return this;
      }
      /**
       * <pre>
       *航行状态
       * </pre>
       *
       * <code>optional uint32 navigational_status = 7;</code>
       */
      public Builder clearNavigationalStatus() {
        copyOnWrite();
        instance.clearNavigationalStatus();
        return this;
      }

      /**
       * <pre>
       *时间戳，utc时间的秒数
       * </pre>
       *
       * <code>optional uint32 timestamp = 8;</code>
       */
      public int getTimestamp() {
        return instance.getTimestamp();
      }
      /**
       * <pre>
       *时间戳，utc时间的秒数
       * </pre>
       *
       * <code>optional uint32 timestamp = 8;</code>
       */
      public Builder setTimestamp(int value) {
        copyOnWrite();
        instance.setTimestamp(value);
        return this;
      }
      /**
       * <pre>
       *时间戳，utc时间的秒数
       * </pre>
       *
       * <code>optional uint32 timestamp = 8;</code>
       */
      public Builder clearTimestamp() {
        copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_VesselPostionReport)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport other = (com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport) arg1;
          mmsi_ = visitor.visitInt(mmsi_ != 0, mmsi_,
              other.mmsi_ != 0, other.mmsi_);
          rot_ = visitor.visitFloat(rot_ != 0F, rot_,
              other.rot_ != 0F, other.rot_);
          sog_ = visitor.visitFloat(sog_ != 0F, sog_,
              other.sog_ != 0F, other.sog_);
          longitude_ = visitor.visitFloat(longitude_ != 0F, longitude_,
              other.longitude_ != 0F, other.longitude_);
          latitude_ = visitor.visitFloat(latitude_ != 0F, latitude_,
              other.latitude_ != 0F, other.latitude_);
          trueHeading_ = visitor.visitFloat(trueHeading_ != 0F, trueHeading_,
              other.trueHeading_ != 0F, other.trueHeading_);
          navigationalStatus_ = visitor.visitInt(navigationalStatus_ != 0, navigationalStatus_,
              other.navigationalStatus_ != 0, other.navigationalStatus_);
          timestamp_ = visitor.visitInt(timestamp_ != 0, timestamp_,
              other.timestamp_ != 0, other.timestamp_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mmsi_ = input.readUInt32();
                  break;
                }
                case 21: {

                  rot_ = input.readFloat();
                  break;
                }
                case 29: {

                  sog_ = input.readFloat();
                  break;
                }
                case 37: {

                  longitude_ = input.readFloat();
                  break;
                }
                case 45: {

                  latitude_ = input.readFloat();
                  break;
                }
                case 53: {

                  trueHeading_ = input.readFloat();
                  break;
                }
                case 56: {

                  navigationalStatus_ = input.readUInt32();
                  break;
                }
                case 64: {

                  timestamp_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_VesselPostionReport)
    private static final com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_VesselPostionReport();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_VesselPostionReport> PARSER;

    public static com.google.protobuf.Parser<EChart_VesselPostionReport> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_VesselStaticVoyageReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_VesselStaticVoyageReport)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MMSI号
     * </pre>
     *
     * <code>optional uint32 mmsi = 1;</code>
     */
    int getMmsi();

    /**
     * <pre>
     *IMO号
     * </pre>
     *
     * <code>optional uint32 imo = 2;</code>
     */
    int getImo();

    /**
     * <pre>
     *船名
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     *船名
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *呼号
     * </pre>
     *
     * <code>optional string callsign = 4;</code>
     */
    java.lang.String getCallsign();
    /**
     * <pre>
     *呼号
     * </pre>
     *
     * <code>optional string callsign = 4;</code>
     */
    com.google.protobuf.ByteString
        getCallsignBytes();

    /**
     * <pre>
     *船舶类型
     * </pre>
     *
     * <code>optional uint32 type = 5;</code>
     */
    int getType();

    /**
     * <pre>
     *目的地
     * </pre>
     *
     * <code>optional string destination = 6;</code>
     */
    java.lang.String getDestination();
    /**
     * <pre>
     *目的地
     * </pre>
     *
     * <code>optional string destination = 6;</code>
     */
    com.google.protobuf.ByteString
        getDestinationBytes();

    /**
     * <pre>
     *吃水深度，单位：米
     * </pre>
     *
     * <code>optional float draught = 7;</code>
     */
    float getDraught();

    /**
     * <pre>
     *船长
     * </pre>
     *
     * <code>optional float length = 8;</code>
     */
    float getLength();

    /**
     * <pre>
     *船宽
     * </pre>
     *
     * <code>optional float width = 9;</code>
     */
    float getWidth();

    /**
     * <pre>
     *预计到达时间，格式为"MMDDHHmm"，UTC时间
     * </pre>
     *
     * <code>optional string eta = 10;</code>
     */
    java.lang.String getEta();
    /**
     * <pre>
     *预计到达时间，格式为"MMDDHHmm"，UTC时间
     * </pre>
     *
     * <code>optional string eta = 10;</code>
     */
    com.google.protobuf.ByteString
        getEtaBytes();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_VesselStaticVoyageReport}
   */
  public  static final class EChart_VesselStaticVoyageReport extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_VesselStaticVoyageReport, EChart_VesselStaticVoyageReport.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_VesselStaticVoyageReport)
      EChart_VesselStaticVoyageReportOrBuilder {
    private EChart_VesselStaticVoyageReport() {
      name_ = "";
      callsign_ = "";
      destination_ = "";
      eta_ = "";
    }
    public static final int MMSI_FIELD_NUMBER = 1;
    private int mmsi_;
    /**
     * <pre>
     *MMSI号
     * </pre>
     *
     * <code>optional uint32 mmsi = 1;</code>
     */
    public int getMmsi() {
      return mmsi_;
    }
    /**
     * <pre>
     *MMSI号
     * </pre>
     *
     * <code>optional uint32 mmsi = 1;</code>
     */
    private void setMmsi(int value) {
      
      mmsi_ = value;
    }
    /**
     * <pre>
     *MMSI号
     * </pre>
     *
     * <code>optional uint32 mmsi = 1;</code>
     */
    private void clearMmsi() {
      
      mmsi_ = 0;
    }

    public static final int IMO_FIELD_NUMBER = 2;
    private int imo_;
    /**
     * <pre>
     *IMO号
     * </pre>
     *
     * <code>optional uint32 imo = 2;</code>
     */
    public int getImo() {
      return imo_;
    }
    /**
     * <pre>
     *IMO号
     * </pre>
     *
     * <code>optional uint32 imo = 2;</code>
     */
    private void setImo(int value) {
      
      imo_ = value;
    }
    /**
     * <pre>
     *IMO号
     * </pre>
     *
     * <code>optional uint32 imo = 2;</code>
     */
    private void clearImo() {
      
      imo_ = 0;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.String name_;
    /**
     * <pre>
     *船名
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <pre>
     *船名
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <pre>
     *船名
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
    }
    /**
     * <pre>
     *船名
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <pre>
     *船名
     * </pre>
     *
     * <code>optional string name = 3;</code>
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value.toStringUtf8();
    }

    public static final int CALLSIGN_FIELD_NUMBER = 4;
    private java.lang.String callsign_;
    /**
     * <pre>
     *呼号
     * </pre>
     *
     * <code>optional string callsign = 4;</code>
     */
    public java.lang.String getCallsign() {
      return callsign_;
    }
    /**
     * <pre>
     *呼号
     * </pre>
     *
     * <code>optional string callsign = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCallsignBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(callsign_);
    }
    /**
     * <pre>
     *呼号
     * </pre>
     *
     * <code>optional string callsign = 4;</code>
     */
    private void setCallsign(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      callsign_ = value;
    }
    /**
     * <pre>
     *呼号
     * </pre>
     *
     * <code>optional string callsign = 4;</code>
     */
    private void clearCallsign() {
      
      callsign_ = getDefaultInstance().getCallsign();
    }
    /**
     * <pre>
     *呼号
     * </pre>
     *
     * <code>optional string callsign = 4;</code>
     */
    private void setCallsignBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      callsign_ = value.toStringUtf8();
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <pre>
     *船舶类型
     * </pre>
     *
     * <code>optional uint32 type = 5;</code>
     */
    public int getType() {
      return type_;
    }
    /**
     * <pre>
     *船舶类型
     * </pre>
     *
     * <code>optional uint32 type = 5;</code>
     */
    private void setType(int value) {
      
      type_ = value;
    }
    /**
     * <pre>
     *船舶类型
     * </pre>
     *
     * <code>optional uint32 type = 5;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int DESTINATION_FIELD_NUMBER = 6;
    private java.lang.String destination_;
    /**
     * <pre>
     *目的地
     * </pre>
     *
     * <code>optional string destination = 6;</code>
     */
    public java.lang.String getDestination() {
      return destination_;
    }
    /**
     * <pre>
     *目的地
     * </pre>
     *
     * <code>optional string destination = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDestinationBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(destination_);
    }
    /**
     * <pre>
     *目的地
     * </pre>
     *
     * <code>optional string destination = 6;</code>
     */
    private void setDestination(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      destination_ = value;
    }
    /**
     * <pre>
     *目的地
     * </pre>
     *
     * <code>optional string destination = 6;</code>
     */
    private void clearDestination() {
      
      destination_ = getDefaultInstance().getDestination();
    }
    /**
     * <pre>
     *目的地
     * </pre>
     *
     * <code>optional string destination = 6;</code>
     */
    private void setDestinationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      destination_ = value.toStringUtf8();
    }

    public static final int DRAUGHT_FIELD_NUMBER = 7;
    private float draught_;
    /**
     * <pre>
     *吃水深度，单位：米
     * </pre>
     *
     * <code>optional float draught = 7;</code>
     */
    public float getDraught() {
      return draught_;
    }
    /**
     * <pre>
     *吃水深度，单位：米
     * </pre>
     *
     * <code>optional float draught = 7;</code>
     */
    private void setDraught(float value) {
      
      draught_ = value;
    }
    /**
     * <pre>
     *吃水深度，单位：米
     * </pre>
     *
     * <code>optional float draught = 7;</code>
     */
    private void clearDraught() {
      
      draught_ = 0F;
    }

    public static final int LENGTH_FIELD_NUMBER = 8;
    private float length_;
    /**
     * <pre>
     *船长
     * </pre>
     *
     * <code>optional float length = 8;</code>
     */
    public float getLength() {
      return length_;
    }
    /**
     * <pre>
     *船长
     * </pre>
     *
     * <code>optional float length = 8;</code>
     */
    private void setLength(float value) {
      
      length_ = value;
    }
    /**
     * <pre>
     *船长
     * </pre>
     *
     * <code>optional float length = 8;</code>
     */
    private void clearLength() {
      
      length_ = 0F;
    }

    public static final int WIDTH_FIELD_NUMBER = 9;
    private float width_;
    /**
     * <pre>
     *船宽
     * </pre>
     *
     * <code>optional float width = 9;</code>
     */
    public float getWidth() {
      return width_;
    }
    /**
     * <pre>
     *船宽
     * </pre>
     *
     * <code>optional float width = 9;</code>
     */
    private void setWidth(float value) {
      
      width_ = value;
    }
    /**
     * <pre>
     *船宽
     * </pre>
     *
     * <code>optional float width = 9;</code>
     */
    private void clearWidth() {
      
      width_ = 0F;
    }

    public static final int ETA_FIELD_NUMBER = 10;
    private java.lang.String eta_;
    /**
     * <pre>
     *预计到达时间，格式为"MMDDHHmm"，UTC时间
     * </pre>
     *
     * <code>optional string eta = 10;</code>
     */
    public java.lang.String getEta() {
      return eta_;
    }
    /**
     * <pre>
     *预计到达时间，格式为"MMDDHHmm"，UTC时间
     * </pre>
     *
     * <code>optional string eta = 10;</code>
     */
    public com.google.protobuf.ByteString
        getEtaBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(eta_);
    }
    /**
     * <pre>
     *预计到达时间，格式为"MMDDHHmm"，UTC时间
     * </pre>
     *
     * <code>optional string eta = 10;</code>
     */
    private void setEta(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      eta_ = value;
    }
    /**
     * <pre>
     *预计到达时间，格式为"MMDDHHmm"，UTC时间
     * </pre>
     *
     * <code>optional string eta = 10;</code>
     */
    private void clearEta() {
      
      eta_ = getDefaultInstance().getEta();
    }
    /**
     * <pre>
     *预计到达时间，格式为"MMDDHHmm"，UTC时间
     * </pre>
     *
     * <code>optional string eta = 10;</code>
     */
    private void setEtaBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      eta_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mmsi_ != 0) {
        output.writeUInt32(1, mmsi_);
      }
      if (imo_ != 0) {
        output.writeUInt32(2, imo_);
      }
      if (!name_.isEmpty()) {
        output.writeString(3, getName());
      }
      if (!callsign_.isEmpty()) {
        output.writeString(4, getCallsign());
      }
      if (type_ != 0) {
        output.writeUInt32(5, type_);
      }
      if (!destination_.isEmpty()) {
        output.writeString(6, getDestination());
      }
      if (draught_ != 0F) {
        output.writeFloat(7, draught_);
      }
      if (length_ != 0F) {
        output.writeFloat(8, length_);
      }
      if (width_ != 0F) {
        output.writeFloat(9, width_);
      }
      if (!eta_.isEmpty()) {
        output.writeString(10, getEta());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mmsi_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, mmsi_);
      }
      if (imo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, imo_);
      }
      if (!name_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getName());
      }
      if (!callsign_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getCallsign());
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, type_);
      }
      if (!destination_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getDestination());
      }
      if (draught_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, draught_);
      }
      if (length_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, length_);
      }
      if (width_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, width_);
      }
      if (!eta_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getEta());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_VesselStaticVoyageReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_VesselStaticVoyageReport)
        com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReportOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MMSI号
       * </pre>
       *
       * <code>optional uint32 mmsi = 1;</code>
       */
      public int getMmsi() {
        return instance.getMmsi();
      }
      /**
       * <pre>
       *MMSI号
       * </pre>
       *
       * <code>optional uint32 mmsi = 1;</code>
       */
      public Builder setMmsi(int value) {
        copyOnWrite();
        instance.setMmsi(value);
        return this;
      }
      /**
       * <pre>
       *MMSI号
       * </pre>
       *
       * <code>optional uint32 mmsi = 1;</code>
       */
      public Builder clearMmsi() {
        copyOnWrite();
        instance.clearMmsi();
        return this;
      }

      /**
       * <pre>
       *IMO号
       * </pre>
       *
       * <code>optional uint32 imo = 2;</code>
       */
      public int getImo() {
        return instance.getImo();
      }
      /**
       * <pre>
       *IMO号
       * </pre>
       *
       * <code>optional uint32 imo = 2;</code>
       */
      public Builder setImo(int value) {
        copyOnWrite();
        instance.setImo(value);
        return this;
      }
      /**
       * <pre>
       *IMO号
       * </pre>
       *
       * <code>optional uint32 imo = 2;</code>
       */
      public Builder clearImo() {
        copyOnWrite();
        instance.clearImo();
        return this;
      }

      /**
       * <pre>
       *船名
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <pre>
       *船名
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <pre>
       *船名
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <pre>
       *船名
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <pre>
       *船名
       * </pre>
       *
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <pre>
       *呼号
       * </pre>
       *
       * <code>optional string callsign = 4;</code>
       */
      public java.lang.String getCallsign() {
        return instance.getCallsign();
      }
      /**
       * <pre>
       *呼号
       * </pre>
       *
       * <code>optional string callsign = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCallsignBytes() {
        return instance.getCallsignBytes();
      }
      /**
       * <pre>
       *呼号
       * </pre>
       *
       * <code>optional string callsign = 4;</code>
       */
      public Builder setCallsign(
          java.lang.String value) {
        copyOnWrite();
        instance.setCallsign(value);
        return this;
      }
      /**
       * <pre>
       *呼号
       * </pre>
       *
       * <code>optional string callsign = 4;</code>
       */
      public Builder clearCallsign() {
        copyOnWrite();
        instance.clearCallsign();
        return this;
      }
      /**
       * <pre>
       *呼号
       * </pre>
       *
       * <code>optional string callsign = 4;</code>
       */
      public Builder setCallsignBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCallsignBytes(value);
        return this;
      }

      /**
       * <pre>
       *船舶类型
       * </pre>
       *
       * <code>optional uint32 type = 5;</code>
       */
      public int getType() {
        return instance.getType();
      }
      /**
       * <pre>
       *船舶类型
       * </pre>
       *
       * <code>optional uint32 type = 5;</code>
       */
      public Builder setType(int value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       *船舶类型
       * </pre>
       *
       * <code>optional uint32 type = 5;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <pre>
       *目的地
       * </pre>
       *
       * <code>optional string destination = 6;</code>
       */
      public java.lang.String getDestination() {
        return instance.getDestination();
      }
      /**
       * <pre>
       *目的地
       * </pre>
       *
       * <code>optional string destination = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDestinationBytes() {
        return instance.getDestinationBytes();
      }
      /**
       * <pre>
       *目的地
       * </pre>
       *
       * <code>optional string destination = 6;</code>
       */
      public Builder setDestination(
          java.lang.String value) {
        copyOnWrite();
        instance.setDestination(value);
        return this;
      }
      /**
       * <pre>
       *目的地
       * </pre>
       *
       * <code>optional string destination = 6;</code>
       */
      public Builder clearDestination() {
        copyOnWrite();
        instance.clearDestination();
        return this;
      }
      /**
       * <pre>
       *目的地
       * </pre>
       *
       * <code>optional string destination = 6;</code>
       */
      public Builder setDestinationBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDestinationBytes(value);
        return this;
      }

      /**
       * <pre>
       *吃水深度，单位：米
       * </pre>
       *
       * <code>optional float draught = 7;</code>
       */
      public float getDraught() {
        return instance.getDraught();
      }
      /**
       * <pre>
       *吃水深度，单位：米
       * </pre>
       *
       * <code>optional float draught = 7;</code>
       */
      public Builder setDraught(float value) {
        copyOnWrite();
        instance.setDraught(value);
        return this;
      }
      /**
       * <pre>
       *吃水深度，单位：米
       * </pre>
       *
       * <code>optional float draught = 7;</code>
       */
      public Builder clearDraught() {
        copyOnWrite();
        instance.clearDraught();
        return this;
      }

      /**
       * <pre>
       *船长
       * </pre>
       *
       * <code>optional float length = 8;</code>
       */
      public float getLength() {
        return instance.getLength();
      }
      /**
       * <pre>
       *船长
       * </pre>
       *
       * <code>optional float length = 8;</code>
       */
      public Builder setLength(float value) {
        copyOnWrite();
        instance.setLength(value);
        return this;
      }
      /**
       * <pre>
       *船长
       * </pre>
       *
       * <code>optional float length = 8;</code>
       */
      public Builder clearLength() {
        copyOnWrite();
        instance.clearLength();
        return this;
      }

      /**
       * <pre>
       *船宽
       * </pre>
       *
       * <code>optional float width = 9;</code>
       */
      public float getWidth() {
        return instance.getWidth();
      }
      /**
       * <pre>
       *船宽
       * </pre>
       *
       * <code>optional float width = 9;</code>
       */
      public Builder setWidth(float value) {
        copyOnWrite();
        instance.setWidth(value);
        return this;
      }
      /**
       * <pre>
       *船宽
       * </pre>
       *
       * <code>optional float width = 9;</code>
       */
      public Builder clearWidth() {
        copyOnWrite();
        instance.clearWidth();
        return this;
      }

      /**
       * <pre>
       *预计到达时间，格式为"MMDDHHmm"，UTC时间
       * </pre>
       *
       * <code>optional string eta = 10;</code>
       */
      public java.lang.String getEta() {
        return instance.getEta();
      }
      /**
       * <pre>
       *预计到达时间，格式为"MMDDHHmm"，UTC时间
       * </pre>
       *
       * <code>optional string eta = 10;</code>
       */
      public com.google.protobuf.ByteString
          getEtaBytes() {
        return instance.getEtaBytes();
      }
      /**
       * <pre>
       *预计到达时间，格式为"MMDDHHmm"，UTC时间
       * </pre>
       *
       * <code>optional string eta = 10;</code>
       */
      public Builder setEta(
          java.lang.String value) {
        copyOnWrite();
        instance.setEta(value);
        return this;
      }
      /**
       * <pre>
       *预计到达时间，格式为"MMDDHHmm"，UTC时间
       * </pre>
       *
       * <code>optional string eta = 10;</code>
       */
      public Builder clearEta() {
        copyOnWrite();
        instance.clearEta();
        return this;
      }
      /**
       * <pre>
       *预计到达时间，格式为"MMDDHHmm"，UTC时间
       * </pre>
       *
       * <code>optional string eta = 10;</code>
       */
      public Builder setEtaBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEtaBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_VesselStaticVoyageReport)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport other = (com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport) arg1;
          mmsi_ = visitor.visitInt(mmsi_ != 0, mmsi_,
              other.mmsi_ != 0, other.mmsi_);
          imo_ = visitor.visitInt(imo_ != 0, imo_,
              other.imo_ != 0, other.imo_);
          name_ = visitor.visitString(!name_.isEmpty(), name_,
              !other.name_.isEmpty(), other.name_);
          callsign_ = visitor.visitString(!callsign_.isEmpty(), callsign_,
              !other.callsign_.isEmpty(), other.callsign_);
          type_ = visitor.visitInt(type_ != 0, type_,
              other.type_ != 0, other.type_);
          destination_ = visitor.visitString(!destination_.isEmpty(), destination_,
              !other.destination_.isEmpty(), other.destination_);
          draught_ = visitor.visitFloat(draught_ != 0F, draught_,
              other.draught_ != 0F, other.draught_);
          length_ = visitor.visitFloat(length_ != 0F, length_,
              other.length_ != 0F, other.length_);
          width_ = visitor.visitFloat(width_ != 0F, width_,
              other.width_ != 0F, other.width_);
          eta_ = visitor.visitString(!eta_.isEmpty(), eta_,
              !other.eta_.isEmpty(), other.eta_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mmsi_ = input.readUInt32();
                  break;
                }
                case 16: {

                  imo_ = input.readUInt32();
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
                case 34: {
                  String s = input.readStringRequireUtf8();

                  callsign_ = s;
                  break;
                }
                case 40: {

                  type_ = input.readUInt32();
                  break;
                }
                case 50: {
                  String s = input.readStringRequireUtf8();

                  destination_ = s;
                  break;
                }
                case 61: {

                  draught_ = input.readFloat();
                  break;
                }
                case 69: {

                  length_ = input.readFloat();
                  break;
                }
                case 77: {

                  width_ = input.readFloat();
                  break;
                }
                case 82: {
                  String s = input.readStringRequireUtf8();

                  eta_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_VesselStaticVoyageReport)
    private static final com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_VesselStaticVoyageReport();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_VesselStaticVoyageReport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_VesselStaticVoyageReport> PARSER;

    public static com.google.protobuf.Parser<EChart_VesselStaticVoyageReport> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokeVLayerIsVisibleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_InvokeVLayerIsVisible)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerIsVisible}
   */
  public  static final class EChart_InvokeVLayerIsVisible extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokeVLayerIsVisible, EChart_InvokeVLayerIsVisible.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_InvokeVLayerIsVisible)
      EChart_InvokeVLayerIsVisibleOrBuilder {
    private EChart_InvokeVLayerIsVisible() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerIsVisible}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_InvokeVLayerIsVisible)
        com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisibleOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_InvokeVLayerIsVisible)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible other = (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_InvokeVLayerIsVisible)
    private static final com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokeVLayerIsVisible();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerIsVisible getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokeVLayerIsVisible> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokeVLayerIsVisible> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultVLayerIsVisibleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_ResultVLayerIsVisible)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *==true为可见，==false为不可见	
     * </pre>
     *
     * <code>optional bool visible = 2;</code>
     */
    boolean getVisible();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerIsVisible}
   */
  public  static final class EChart_ResultVLayerIsVisible extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultVLayerIsVisible, EChart_ResultVLayerIsVisible.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_ResultVLayerIsVisible)
      EChart_ResultVLayerIsVisibleOrBuilder {
    private EChart_ResultVLayerIsVisible() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_IS_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int VISIBLE_FIELD_NUMBER = 2;
    private boolean visible_;
    /**
     * <pre>
     *==true为可见，==false为不可见	
     * </pre>
     *
     * <code>optional bool visible = 2;</code>
     */
    public boolean getVisible() {
      return visible_;
    }
    /**
     * <pre>
     *==true为可见，==false为不可见	
     * </pre>
     *
     * <code>optional bool visible = 2;</code>
     */
    private void setVisible(boolean value) {
      
      visible_ = value;
    }
    /**
     * <pre>
     *==true为可见，==false为不可见	
     * </pre>
     *
     * <code>optional bool visible = 2;</code>
     */
    private void clearVisible() {
      
      visible_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (visible_ != false) {
        output.writeBool(2, visible_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (visible_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, visible_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerIsVisible}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_ResultVLayerIsVisible)
        com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisibleOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_IS_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *==true为可见，==false为不可见	
       * </pre>
       *
       * <code>optional bool visible = 2;</code>
       */
      public boolean getVisible() {
        return instance.getVisible();
      }
      /**
       * <pre>
       *==true为可见，==false为不可见	
       * </pre>
       *
       * <code>optional bool visible = 2;</code>
       */
      public Builder setVisible(boolean value) {
        copyOnWrite();
        instance.setVisible(value);
        return this;
      }
      /**
       * <pre>
       *==true为可见，==false为不可见	
       * </pre>
       *
       * <code>optional bool visible = 2;</code>
       */
      public Builder clearVisible() {
        copyOnWrite();
        instance.clearVisible();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_ResultVLayerIsVisible)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible other = (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          visible_ = visitor.visitBoolean(visible_ != false, visible_,
              other.visible_ != false, other.visible_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  visible_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_ResultVLayerIsVisible)
    private static final com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultVLayerIsVisible();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerIsVisible getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultVLayerIsVisible> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultVLayerIsVisible> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokeVLayerSetVisibleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_InvokeVLayerSetVisible)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *==true为可见，==false为不可见	
     * </pre>
     *
     * <code>optional bool visible = 3;</code>
     */
    boolean getVisible();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerSetVisible}
   */
  public  static final class EChart_InvokeVLayerSetVisible extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokeVLayerSetVisible, EChart_InvokeVLayerSetVisible.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_InvokeVLayerSetVisible)
      EChart_InvokeVLayerSetVisibleOrBuilder {
    private EChart_InvokeVLayerSetVisible() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_VISIBLE
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int VISIBLE_FIELD_NUMBER = 3;
    private boolean visible_;
    /**
     * <pre>
     *==true为可见，==false为不可见	
     * </pre>
     *
     * <code>optional bool visible = 3;</code>
     */
    public boolean getVisible() {
      return visible_;
    }
    /**
     * <pre>
     *==true为可见，==false为不可见	
     * </pre>
     *
     * <code>optional bool visible = 3;</code>
     */
    private void setVisible(boolean value) {
      
      visible_ = value;
    }
    /**
     * <pre>
     *==true为可见，==false为不可见	
     * </pre>
     *
     * <code>optional bool visible = 3;</code>
     */
    private void clearVisible() {
      
      visible_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (visible_ != false) {
        output.writeBool(3, visible_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (visible_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, visible_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerSetVisible}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_InvokeVLayerSetVisible)
        com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisibleOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_VISIBLE
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *==true为可见，==false为不可见	
       * </pre>
       *
       * <code>optional bool visible = 3;</code>
       */
      public boolean getVisible() {
        return instance.getVisible();
      }
      /**
       * <pre>
       *==true为可见，==false为不可见	
       * </pre>
       *
       * <code>optional bool visible = 3;</code>
       */
      public Builder setVisible(boolean value) {
        copyOnWrite();
        instance.setVisible(value);
        return this;
      }
      /**
       * <pre>
       *==true为可见，==false为不可见	
       * </pre>
       *
       * <code>optional bool visible = 3;</code>
       */
      public Builder clearVisible() {
        copyOnWrite();
        instance.clearVisible();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_InvokeVLayerSetVisible)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible other = (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          visible_ = visitor.visitBoolean(visible_ != false, visible_,
              other.visible_ != false, other.visible_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  visible_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_InvokeVLayerSetVisible)
    private static final com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokeVLayerSetVisible();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetVisible getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokeVLayerSetVisible> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokeVLayerSetVisible> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultVLayerSetVisibleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_ResultVLayerSetVisible)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_VISIBILE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_VISIBILE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerSetVisible}
   */
  public  static final class EChart_ResultVLayerSetVisible extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultVLayerSetVisible, EChart_ResultVLayerSetVisible.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_ResultVLayerSetVisible)
      EChart_ResultVLayerSetVisibleOrBuilder {
    private EChart_ResultVLayerSetVisible() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_VISIBILE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_VISIBILE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_VISIBILE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_VISIBILE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_VISIBILE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_VISIBILE
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerSetVisible}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_ResultVLayerSetVisible)
        com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisibleOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_VISIBILE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_VISIBILE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_VISIBILE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_VISIBILE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_VISIBILE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_VISIBILE
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_ResultVLayerSetVisible)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible other = (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_ResultVLayerSetVisible)
    private static final com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultVLayerSetVisible();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetVisible getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultVLayerSetVisible> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultVLayerSetVisible> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokeVLayerUpdateVesselsPostionReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    java.util.List<com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport> 
        getReportsList();
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport getReports(int index);
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    int getReportsCount();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport}
   */
  public  static final class EChart_InvokeVLayerUpdateVesselsPostionReport extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokeVLayerUpdateVesselsPostionReport, EChart_InvokeVLayerUpdateVesselsPostionReport.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport)
      EChart_InvokeVLayerUpdateVesselsPostionReportOrBuilder {
    private EChart_InvokeVLayerUpdateVesselsPostionReport() {
      reports_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int REPORTS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport> reports_;
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    public java.util.List<com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport> getReportsList() {
      return reports_;
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    public java.util.List<? extends com.ndk.echart.EchartVessellayer.EChart_VesselPostionReportOrBuilder> 
        getReportsOrBuilderList() {
      return reports_;
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    public int getReportsCount() {
      return reports_.size();
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    public com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport getReports(int index) {
      return reports_.get(index);
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    public com.ndk.echart.EchartVessellayer.EChart_VesselPostionReportOrBuilder getReportsOrBuilder(
        int index) {
      return reports_.get(index);
    }
    private void ensureReportsIsMutable() {
      if (!reports_.isModifiable()) {
        reports_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(reports_);
       }
    }

    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void setReports(
        int index, com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReportsIsMutable();
      reports_.set(index, value);
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void setReports(
        int index, com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.Builder builderForValue) {
      ensureReportsIsMutable();
      reports_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void addReports(com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReportsIsMutable();
      reports_.add(value);
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void addReports(
        int index, com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureReportsIsMutable();
      reports_.add(index, value);
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void addReports(
        com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.Builder builderForValue) {
      ensureReportsIsMutable();
      reports_.add(builderForValue.build());
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void addReports(
        int index, com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.Builder builderForValue) {
      ensureReportsIsMutable();
      reports_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void addAllReports(
        java.lang.Iterable<? extends com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport> values) {
      ensureReportsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, reports_);
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void clearReports() {
      reports_ = emptyProtobufList();
    }
    /**
     * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
     */
    private void removeReports(int index) {
      ensureReportsIsMutable();
      reports_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      for (int i = 0; i < reports_.size(); i++) {
        output.writeMessage(3, reports_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      for (int i = 0; i < reports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, reports_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport)
        com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReportOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_UPDATE_VESSELS_POSITION_REPORT
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public java.util.List<com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport> getReportsList() {
        return java.util.Collections.unmodifiableList(
            instance.getReportsList());
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public int getReportsCount() {
        return instance.getReportsCount();
      }/**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport getReports(int index) {
        return instance.getReports(index);
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder setReports(
          int index, com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport value) {
        copyOnWrite();
        instance.setReports(index, value);
        return this;
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder setReports(
          int index, com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.Builder builderForValue) {
        copyOnWrite();
        instance.setReports(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder addReports(com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport value) {
        copyOnWrite();
        instance.addReports(value);
        return this;
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder addReports(
          int index, com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport value) {
        copyOnWrite();
        instance.addReports(index, value);
        return this;
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder addReports(
          com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.Builder builderForValue) {
        copyOnWrite();
        instance.addReports(builderForValue);
        return this;
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder addReports(
          int index, com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.Builder builderForValue) {
        copyOnWrite();
        instance.addReports(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder addAllReports(
          java.lang.Iterable<? extends com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport> values) {
        copyOnWrite();
        instance.addAllReports(values);
        return this;
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder clearReports() {
        copyOnWrite();
        instance.clearReports();
        return this;
      }
      /**
       * <code>repeated .echart.vessellayer.EChart_VesselPostionReport reports = 3;</code>
       */
      public Builder removeReports(int index) {
        copyOnWrite();
        instance.removeReports(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          reports_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport other = (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          reports_= visitor.visitList(reports_, other.reports_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 26: {
                  if (!reports_.isModifiable()) {
                    reports_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(reports_);
                  }
                  reports_.add(
                      input.readMessage(com.ndk.echart.EchartVessellayer.EChart_VesselPostionReport.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport)
    private static final com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokeVLayerUpdateVesselsPostionReport();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerUpdateVesselsPostionReport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokeVLayerUpdateVesselsPostionReport> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokeVLayerUpdateVesselsPostionReport> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultVLayerUpdateVesselsPostionReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_ResultVLayerUpdateVesselsPostionReport)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerUpdateVesselsPostionReport}
   */
  public  static final class EChart_ResultVLayerUpdateVesselsPostionReport extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultVLayerUpdateVesselsPostionReport, EChart_ResultVLayerUpdateVesselsPostionReport.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_ResultVLayerUpdateVesselsPostionReport)
      EChart_ResultVLayerUpdateVesselsPostionReportOrBuilder {
    private EChart_ResultVLayerUpdateVesselsPostionReport() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerUpdateVesselsPostionReport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_ResultVLayerUpdateVesselsPostionReport)
        com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReportOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_UPDATE_VESSELS_POSITION_REPORT	
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_ResultVLayerUpdateVesselsPostionReport)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport other = (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_ResultVLayerUpdateVesselsPostionReport)
    private static final com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultVLayerUpdateVesselsPostionReport();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerUpdateVesselsPostionReport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultVLayerUpdateVesselsPostionReport> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultVLayerUpdateVesselsPostionReport> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokeVLayerGetOwnMMSIOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_InvokeVLayerGetOwnMMSI)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerGetOwnMMSI}
   */
  public  static final class EChart_InvokeVLayerGetOwnMMSI extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokeVLayerGetOwnMMSI, EChart_InvokeVLayerGetOwnMMSI.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_InvokeVLayerGetOwnMMSI)
      EChart_InvokeVLayerGetOwnMMSIOrBuilder {
    private EChart_InvokeVLayerGetOwnMMSI() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerGetOwnMMSI}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_InvokeVLayerGetOwnMMSI)
        com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSIOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_InvokeVLayerGetOwnMMSI)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI other = (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_InvokeVLayerGetOwnMMSI)
    private static final com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokeVLayerGetOwnMMSI();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerGetOwnMMSI getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokeVLayerGetOwnMMSI> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokeVLayerGetOwnMMSI> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultVLayerGetOwnMMSIOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_ResultVLayerGetOwnMMSI)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();

    /**
     * <pre>
     *本船的MMSI	
     * </pre>
     *
     * <code>optional uint32 mmsi = 2;</code>
     */
    int getMmsi();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerGetOwnMMSI}
   */
  public  static final class EChart_ResultVLayerGetOwnMMSI extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultVLayerGetOwnMMSI, EChart_ResultVLayerGetOwnMMSI.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_ResultVLayerGetOwnMMSI)
      EChart_ResultVLayerGetOwnMMSIOrBuilder {
    private EChart_ResultVLayerGetOwnMMSI() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_GET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int MMSI_FIELD_NUMBER = 2;
    private int mmsi_;
    /**
     * <pre>
     *本船的MMSI	
     * </pre>
     *
     * <code>optional uint32 mmsi = 2;</code>
     */
    public int getMmsi() {
      return mmsi_;
    }
    /**
     * <pre>
     *本船的MMSI	
     * </pre>
     *
     * <code>optional uint32 mmsi = 2;</code>
     */
    private void setMmsi(int value) {
      
      mmsi_ = value;
    }
    /**
     * <pre>
     *本船的MMSI	
     * </pre>
     *
     * <code>optional uint32 mmsi = 2;</code>
     */
    private void clearMmsi() {
      
      mmsi_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (mmsi_ != 0) {
        output.writeUInt32(2, mmsi_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (mmsi_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, mmsi_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerGetOwnMMSI}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_ResultVLayerGetOwnMMSI)
        com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSIOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_GET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *本船的MMSI	
       * </pre>
       *
       * <code>optional uint32 mmsi = 2;</code>
       */
      public int getMmsi() {
        return instance.getMmsi();
      }
      /**
       * <pre>
       *本船的MMSI	
       * </pre>
       *
       * <code>optional uint32 mmsi = 2;</code>
       */
      public Builder setMmsi(int value) {
        copyOnWrite();
        instance.setMmsi(value);
        return this;
      }
      /**
       * <pre>
       *本船的MMSI	
       * </pre>
       *
       * <code>optional uint32 mmsi = 2;</code>
       */
      public Builder clearMmsi() {
        copyOnWrite();
        instance.clearMmsi();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_ResultVLayerGetOwnMMSI)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI other = (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          mmsi_ = visitor.visitInt(mmsi_ != 0, mmsi_,
              other.mmsi_ != 0, other.mmsi_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mmsi_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_ResultVLayerGetOwnMMSI)
    private static final com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultVLayerGetOwnMMSI();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerGetOwnMMSI getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultVLayerGetOwnMMSI> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultVLayerGetOwnMMSI> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_InvokeVLayerSetOwnMMSIOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_InvokeVLayerSetOwnMMSI)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_InvokeHeader getHdr();

    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    int getLayerId();

    /**
     * <pre>
     *本船的MMSI	
     * </pre>
     *
     * <code>optional uint32 mmsi = 3;</code>
     */
    int getMmsi();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerSetOwnMMSI}
   */
  public  static final class EChart_InvokeVLayerSetOwnMMSI extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_InvokeVLayerSetOwnMMSI, EChart_InvokeVLayerSetOwnMMSI.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_InvokeVLayerSetOwnMMSI)
      EChart_InvokeVLayerSetOwnMMSIOrBuilder {
    private EChart_InvokeVLayerSetOwnMMSI() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_InvokeHeader hdr_;
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_InvokeHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_InvokeHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_INVOKE_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public static final int LAYER_ID_FIELD_NUMBER = 2;
    private int layerId_;
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    public int getLayerId() {
      return layerId_;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void setLayerId(int value) {
      
      layerId_ = value;
    }
    /**
     * <pre>
     *动态船舶图层id	
     * </pre>
     *
     * <code>optional uint32 layer_id = 2;</code>
     */
    private void clearLayerId() {
      
      layerId_ = 0;
    }

    public static final int MMSI_FIELD_NUMBER = 3;
    private int mmsi_;
    /**
     * <pre>
     *本船的MMSI	
     * </pre>
     *
     * <code>optional uint32 mmsi = 3;</code>
     */
    public int getMmsi() {
      return mmsi_;
    }
    /**
     * <pre>
     *本船的MMSI	
     * </pre>
     *
     * <code>optional uint32 mmsi = 3;</code>
     */
    private void setMmsi(int value) {
      
      mmsi_ = value;
    }
    /**
     * <pre>
     *本船的MMSI	
     * </pre>
     *
     * <code>optional uint32 mmsi = 3;</code>
     */
    private void clearMmsi() {
      
      mmsi_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
      if (layerId_ != 0) {
        output.writeUInt32(2, layerId_);
      }
      if (mmsi_ != 0) {
        output.writeUInt32(3, mmsi_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      if (layerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, layerId_);
      }
      if (mmsi_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, mmsi_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_InvokeVLayerSetOwnMMSI}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_InvokeVLayerSetOwnMMSI)
        com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSIOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_InvokeHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_InvokeHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_InvokeHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_INVOKE_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_InvokeHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public int getLayerId() {
        return instance.getLayerId();
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder setLayerId(int value) {
        copyOnWrite();
        instance.setLayerId(value);
        return this;
      }
      /**
       * <pre>
       *动态船舶图层id	
       * </pre>
       *
       * <code>optional uint32 layer_id = 2;</code>
       */
      public Builder clearLayerId() {
        copyOnWrite();
        instance.clearLayerId();
        return this;
      }

      /**
       * <pre>
       *本船的MMSI	
       * </pre>
       *
       * <code>optional uint32 mmsi = 3;</code>
       */
      public int getMmsi() {
        return instance.getMmsi();
      }
      /**
       * <pre>
       *本船的MMSI	
       * </pre>
       *
       * <code>optional uint32 mmsi = 3;</code>
       */
      public Builder setMmsi(int value) {
        copyOnWrite();
        instance.setMmsi(value);
        return this;
      }
      /**
       * <pre>
       *本船的MMSI	
       * </pre>
       *
       * <code>optional uint32 mmsi = 3;</code>
       */
      public Builder clearMmsi() {
        copyOnWrite();
        instance.clearMmsi();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_InvokeVLayerSetOwnMMSI)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI other = (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          layerId_ = visitor.visitInt(layerId_ != 0, layerId_,
              other.layerId_ != 0, other.layerId_);
          mmsi_ = visitor.visitInt(mmsi_ != 0, mmsi_,
              other.mmsi_ != 0, other.mmsi_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_InvokeHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_InvokeHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  layerId_ = input.readUInt32();
                  break;
                }
                case 24: {

                  mmsi_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_InvokeVLayerSetOwnMMSI)
    private static final com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_InvokeVLayerSetOwnMMSI();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_InvokeVLayerSetOwnMMSI getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_InvokeVLayerSetOwnMMSI> PARSER;

    public static com.google.protobuf.Parser<EChart_InvokeVLayerSetOwnMMSI> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EChart_ResultVLayerSetOwnMMSIOrBuilder extends
      // @@protoc_insertion_point(interface_extends:echart.vessellayer.EChart_ResultVLayerSetOwnMMSI)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    boolean hasHdr();
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    com.ndk.echart.Echart.EChart_ResultHeader getHdr();
  }
  /**
   * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerSetOwnMMSI}
   */
  public  static final class EChart_ResultVLayerSetOwnMMSI extends
      com.google.protobuf.GeneratedMessageLite<
          EChart_ResultVLayerSetOwnMMSI, EChart_ResultVLayerSetOwnMMSI.Builder> implements
      // @@protoc_insertion_point(message_implements:echart.vessellayer.EChart_ResultVLayerSetOwnMMSI)
      EChart_ResultVLayerSetOwnMMSIOrBuilder {
    private EChart_ResultVLayerSetOwnMMSI() {
    }
    public static final int HDR_FIELD_NUMBER = 1;
    private com.ndk.echart.Echart.EChart_ResultHeader hdr_;
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public boolean hasHdr() {
      return hdr_ != null;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
      return hdr_ == null ? com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance() : hdr_;
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (value == null) {
        throw new NullPointerException();
      }
      hdr_ = value;
      
      }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void setHdr(
        com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
      hdr_ = builderForValue.build();
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
      if (hdr_ != null &&
          hdr_ != com.ndk.echart.Echart.EChart_ResultHeader.getDefaultInstance()) {
        hdr_ =
          com.ndk.echart.Echart.EChart_ResultHeader.newBuilder(hdr_).mergeFrom(value).buildPartial();
      } else {
        hdr_ = value;
      }
      
    }
    /**
     * <pre>
     *MSG_RESULT_VLAYER_SET_OWN_MMSI
     * </pre>
     *
     * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
     */
    private void clearHdr() {  hdr_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hdr_ != null) {
        output.writeMessage(1, getHdr());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hdr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHdr());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code echart.vessellayer.EChart_ResultVLayerSetOwnMMSI}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI, Builder> implements
        // @@protoc_insertion_point(builder_implements:echart.vessellayer.EChart_ResultVLayerSetOwnMMSI)
        com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSIOrBuilder {
      // Construct using com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public boolean hasHdr() {
        return instance.hasHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public com.ndk.echart.Echart.EChart_ResultHeader getHdr() {
        return instance.getHdr();
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.setHdr(value);
        return this;
        }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder setHdr(
          com.ndk.echart.Echart.EChart_ResultHeader.Builder builderForValue) {
        copyOnWrite();
        instance.setHdr(builderForValue);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder mergeHdr(com.ndk.echart.Echart.EChart_ResultHeader value) {
        copyOnWrite();
        instance.mergeHdr(value);
        return this;
      }
      /**
       * <pre>
       *MSG_RESULT_VLAYER_SET_OWN_MMSI
       * </pre>
       *
       * <code>optional .echart.EChart_ResultHeader hdr = 1;</code>
       */
      public Builder clearHdr() {  copyOnWrite();
        instance.clearHdr();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:echart.vessellayer.EChart_ResultVLayerSetOwnMMSI)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI other = (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI) arg1;
          hdr_ = visitor.visitMessage(hdr_, other.hdr_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.ndk.echart.Echart.EChart_ResultHeader.Builder subBuilder = null;
                  if (hdr_ != null) {
                    subBuilder = hdr_.toBuilder();
                  }
                  hdr_ = input.readMessage(com.ndk.echart.Echart.EChart_ResultHeader.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(hdr_);
                    hdr_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:echart.vessellayer.EChart_ResultVLayerSetOwnMMSI)
    private static final com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EChart_ResultVLayerSetOwnMMSI();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.ndk.echart.EchartVessellayer.EChart_ResultVLayerSetOwnMMSI getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EChart_ResultVLayerSetOwnMMSI> PARSER;

    public static com.google.protobuf.Parser<EChart_ResultVLayerSetOwnMMSI> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
